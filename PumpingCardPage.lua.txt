--@region *****************************Description:抽卡界面*****************************
--Copyright(C) 2019 by TaoJin
--All rights reserved.
--ProductName:  dungeon3
--LevelName:    Launch
--Author:       futf-Tony
--Version:      0.1
--UnityVersion: 2018.4.0f1
--CreateTime:   2019/09/23 08:42:46
--@endregion
--@region ===================================变量==================================
local util = require("xlua.util")
local Net = require("Common.Net")
local UIUtils = require("Common.UIUtils")
local UIPanel = require("UI.UIPanel")
local ResourceManager = require("Common.ResourceManager")
local Quest = require("Module.Quest")
local Msgac = require("Common.Msgac")
local json = require("dkjson")
local UIBase = require("UI.UIBase")
local Storage = require("Module.Storage")
local functions = require("functions")
local dbdata = require("Common.Designdb")
local CardPoolScrollView = require("UI.CardPoolScrollView")
local Crew = require("Module.Crew")
--//TODO  筛选下拉框列表
local EquipSort = require("Common.EquipSort")
local QualitySortTypeArray = {
    1,
    2,
    3,
    4,
    5,
    6
}
local RoleSortTypeArray = {
    1,
    2,
    3,
    4,
    5,
    6,
    7
}

local sortNameArray = {
    "全部品质",
    "D",
    "C",
    "B",
    "A",
    "S"
}
local sortNameArray2 = {
    "全部职业",
    "战士",
    "法师",
    "刺客",
    "辅助",
    "射手",
    "坦克"
}
-----------------------------------------------------------------------------------
local PumpingCardPage = class("PumpingCardPage", UIPanel)
----------------------------------------------------------------------------------
local this = nil
--实例对象
--@endregion
--@region ===================================生命周期==================================
-------------------------------在绑定时调用，处理各种事件注册和属性设置，相当于main().-------------------------------
function PumpingCardPage:OnBind()
    PumpingCardPage.super.OnBind(self)
    --dump("<color=#FF3A00>@</color>")
    --找到抽卡界面
    self.summoning = self.gameObject.transform:Find("summoning")
    --存储其他模块UI面板
    self.Group_Default = self.summoning.parent.parent.parent:Find("Group-Default")
    --dump("==========绑定事件send可持续弹出==========")
    self.bindLgEvent = {
        --绑定事件send可持续弹出
        [Constants.ShowUI.PumpingCardPage] = PumpingCardPage.Show
    }
    --dump("<color=#FF3A00>@</color>")
    --dump("==========查找对象==========")
    if this == nil then
        this = self
    end
    this.selectNum = 1
    --记录选择了哪个卡池
    local zb = self.gameObject.transform:Find("summoning/top/page/line/zb")
    local jy = self.gameObject.transform:Find("summoning/top/page/line/jy")
    --找到抽卡界面下半部分
    self.down = self.gameObject.transform:Find("summoning/down")
    local line = this.down.transform:Find("line")
    local btn1 = this.down.transform:Find("btn1")
    local btn2 = this.down.transform:Find("btn2")
    local lineobj = line
    local Toggle1 = line.transform:Find("Toggle1")
    local Toggle2 = line.transform:Find("Toggle2")
    local Toggle3 = line.transform:Find("Toggle3")
    self.line_2 = self.gameObject.transform:Find("summoning/down/line")
    self.eventStaticId = nil
    --ID
    self.discount = nil
    --折扣
    self.free_time_remain = nil
    --剩余免费时间
    self.frepricee_time_remain = nil
    --单价
    self.imgBg = self:GetComponent(self.mainTf, "bg", UI.Image)
    this.q_sort_table = {}
    this.r_sort_table = {}
    this.arrU, this.arrR, this.arrA = {}, {}, {}
    --获得名为bg图片组件
    --dump("<color=#FF3A00>@</color>")
    --dump("==========初始化加载卡池界面==========")
    --查看卡池界面
    if this.probability == nil then
        local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/pumpingCard/probability.prefab")
        assert(asset)
        this.probability = asset:Instantiate()
        this.probability.transform:SetParent(this.summoning.transform, false)

        local canvasGroup = this.probability.gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
        canvasGroup.alpha = 0
        canvasGroup.blocksRaycasts = false
        canvasGroup.interactable = false
    end
    --dump("==========用于存放抽卡弹出spine==========")
    local roleInfoSpineStage_Name = "Assets/Art/UI/Prefab/pumpingCard/roleInfoSpineStage.prefab"
    local roleInfoSpineStage_asset = CS.TJ.BundleManager.Instance:LoadAsset(roleInfoSpineStage_Name)
    assert(roleInfoSpineStage_asset)
    --用于存放抽卡弹出spine
    this.roleInfoSpineStage_prefab = roleInfoSpineStage_asset:Instantiate()
    --dump("<color=#FF3A00>@</color>")
    --dump("==========状态设置==========")
    this.down.gameObject:SetActive(true)
    PumpingCardPage:HeroGetPoolList()
    --获取卡池信息
    PumpingCardPage:InitToggle()
    --初始化卡池选择按钮
    PumpingCardPage:GetGoldDiamondSoulOrb()
    --默认置灰再生功能按钮
    local jybtn = this.summoning:Find("top/page/line/jy/btn")
    jybtn.gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
    --设置金币钻石灵魂宝珠数量显示到UI

    --dump("<color=#FF3A00>@</color>")
    --dump("==========注册按钮回调==========")
    --注册卡池按钮回调
    self:buttonOn(self.mainTf, "btnLook", self.CreatePoolList)
    --注册召唤按钮回调
    self:buttonOn(zb.parent, "zb", self.OpenSummoning)
    --注册再生按钮回调
    -- self:buttonOn(jy.parent, "jy", self.HeroSynthesis)
    --注册召唤一次按钮回调
    self:buttonOn(
        btn1.parent,
        "btn1",
        function(PumpingCardPage)
            local numtext = self:GetComponent(self.mainTf:Find("down/btn1/tips"), "num", UI.Text)
            PumpingCardPage:GetOneC2S()--告诉服务器单抽
            --dump("<color=#FF3A00>@</color>")
            --dump("======================剩余免费时间设置到UI======================")
            -- --时间戳转换
            -- 倒计时
            this:HeroGetPoolList()
            ------------------------------------
            --dump("<color=#FF3A00>@</color>")
            --dump("======================单价设置到UI======================")
            local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
            numtext.text = "x" .. this.frepricee_time_remain
            --dump("<color=#FF3A00>@</color>")
            --dump("======================连抽价格设置到UI======================")
            local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
            numtext2.text = "x" .. math.ceil(this.frepricee_time_remain * this.discount * 0.01 * 10)
            --float转
            --dump("<color=#FF3A00>@</color>")
            --dump("======================初始化卡池界面======================")
            if this.probability ~= nil then
                local canvasGroup = this.summoning:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
                canvasGroup.alpha = 0
                canvasGroup.blocksRaycasts = false
                canvasGroup.interactable = false
                --获取json数据
                local altar_cardpool = dbdata.GetTable("altar_cardpool")
                for _, cardpoolindex in pairs(altar_cardpool) do
                    --获取服务端发的卡池数据
                    --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                    if cardpoolindex.id == this.eventStaticId then
                        local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                        --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                        --查找界面内的对象赋值这四个数据
                        this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                        this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                        this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                        this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                        this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                        this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                        this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                        this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                        this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                        this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
                    end
                end
            end
        end
    )
    --注册十连抽按钮回调
    self:buttonOn(
        btn2.parent,
        "btn2",
        function(PumpingCardPage)
            local numtext2 = self.gameObject.transform:Find("summoning/down/btn2/tips/num"):GetComponent(typeof(UI.Text))

            PumpingCardPage:GetTenC2S()
            --告诉服务器十连抽
            --dump("<color=#FF3A00>@</color>")
            --dump("======================剩余免费时间设置到UI======================")
            -- --时间戳转换
            -- 倒计时
            this:HeroGetPoolList()
            ------------------------------------
            --dump("<color=#FF3A00>@</color>")
            --dump("======================单价设置到UI======================")
            local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
            numtext.text = "x" .. this.frepricee_time_remain
            --dump("<color=#FF3A00>@</color>")
            --dump("======================连抽价格设置到UI======================")
            local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
            numtext2.text = "x" .. math.ceil(this.frepricee_time_remain * this.discount * 0.01 * 10)
            --float转
            --dump("<color=#FF3A00>@</color>")
            --dump("======================初始化卡池界面======================")
            if this.probability ~= nil then
                local canvasGroup = this.summoning:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
                canvasGroup.alpha = 0
                canvasGroup.blocksRaycasts = false
                canvasGroup.interactable = false
                --获取json数据
                local altar_cardpool = dbdata.GetTable("altar_cardpool")
                for _, cardpoolindex in pairs(altar_cardpool) do
                    --获取服务端发的卡池数据
                    --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                    if cardpoolindex.id == this.eventStaticId then
                        local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                        --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                        --查找界面内的对象赋值这四个数据
                        this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                        this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                        this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                        this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                        this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                        this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                        this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                        this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                        this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                        this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
                    end
                end
            end
        end
    )
    --注册卡池选择按钮回调
    -- local toggle1CMP = Toggle1.transform:GetComponent(typeof(UI.Button))
    self:buttonOn(Toggle1.parent, "Toggle1", self.SelectToggle1)
    --注册卡池选择按钮回调
    self:buttonOn(Toggle2.parent, "Toggle2", self.SelectToggle2)
    --注册卡池选择按钮回调
    self:buttonOn(Toggle3.parent, "Toggle3", self.SelectToggle3)
    --注册下拉框点击事件

    self.yl = this.summoning:Find("probability/yl")
    self.btnScreen = self:buttonOn(self.yl, "btnScreen1", PumpingCardPage.OnToggleQualitySortList)
    self.labScreen = self:GetComponent(self.btnScreen.transform, "text", UI.Text)
    self.sortList = self:Find(self.btnScreen.transform, "list")
    self.sortItem = self:Find(self.sortList, "text")
    self.sortItem.gameObject:SetActive(false)
    self.sortItemList = {self.sortItem}

    self.btnScreen2 = self:buttonOn(self.yl, "btnScreen2", PumpingCardPage.OnToggleRoleSortList)
    self.labScreen2 = self:GetComponent(self.btnScreen2.transform, "text", UI.Text)
    self.roleTypeList = self:Find(self.btnScreen2.transform, "list")
    self.roleTypeItem = self:Find(self.roleTypeList, "text")
    self.roleTypeItem.gameObject:SetActive(false)
    self.roleTypeItemList = {self.roleTypeItem}
    --dump("<color=#FF3A00>@</color>")
    --dump("==========注册按钮回调==========")
    -- self:Init()
    self:touchOutsideOn()
end
-------------------------------显示抽卡界面需要做的处理-------------------------------
function PumpingCardPage:Show(_, data)
    PumpingCardPage.super.Show(self)

    --dump("==========刷新灵魂宝珠数量==========")
    PumpingCardPage:GetGoldDiamondSoulOrb()
    --抽卡完设置一下金币钻石和灵魂宝珠的值
    PumpingCardPage:HeroGetPoolList()
    -- --获取卡池信息
    --dump("==========隐藏最高层级里面的tip==========")
    this.Group_Default = this.summoning.parent.parent.parent:Find("Group-Default")
    this.Group_Default:GetComponent(typeof(UnityEngine.RectTransform)).localScale = CS.UnityEngine.Vector3(0, 0, 0)
    --dump("<color=#FF3A00>@</color>")
    --dump("==========绑定事件==========")
    self:on(Constants.ShowUI.PumpingCardPage)
    self:RefreshBtnStatus()
end
--@region----------------------点击空白处触发(重写)-------------------------------
function PumpingCardPage:touchOutsideOn()
    self:touchOutsideOff()
    local touchOutsideObject = GameObject("TouchoutsideObject2")
    touchOutsideObject:AddComponent(typeof(RectTransform))
    touchOutsideObject.layer = Constants.GameObjectLayer.UI
    UIUtils.SetRectTransformAlignByPresetName(touchOutsideObject, "stretch_stretch")
    touchOutsideObject.transform:SetParent(self.gameObject.transform, false)
    touchOutsideObject.transform:SetAsFirstSibling()
    UIUtils.SetRaycastTarget(touchOutsideObject, true)
    local btnComp = touchOutsideObject:AddComponent(typeof(UI.Button))
    local func = util.bind(self.OnClickOutside, self)
    this:buttonOn(touchOutsideObject, "", self.OnClickOutside)
    -- self:buttonOn(touchOutsideObject.parent, "touchOutsideObject", self.HeroSynthesis)
    self.touchOutsideObject = touchOutsideObject
end
function PumpingCardPage:OnClickOutside()
    if this.probability ~= nil and this.summoning.transform:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha == 1 then
        if this.summoning.transform:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)) then
            local canvasGroup = this.summoning.transform:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
            canvasGroup.alpha = 0
            canvasGroup.blocksRaycasts = false
            canvasGroup.interactable = false

            --dump("==========隐藏最高层级里面的tip==========")
            this.Group_Default = this.summoning.parent.parent.parent:Find("Group-Default")
            this.Group_Default:GetComponent(typeof(UnityEngine.RectTransform)).localScale = CS.UnityEngine.Vector3(0, 0, 0)
        else
            local canvasGroup = this.summoning.transform:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
            canvasGroup.alpha = 0
            canvasGroup.blocksRaycasts = false
            canvasGroup.interactable = false

            --dump("==========隐藏最高层级里面的tip==========")
            this.Group_Default = this.summoning.parent.parent.parent:Find("Group-Default")
            this.Group_Default:GetComponent(typeof(UnityEngine.RectTransform)).localScale = new
            CS.UnityEngine.Vector3(0, 0, 0)
        end
    else
        lgEvent:send("wait_action_over")
        self:Hide()
        this.Group_Default = this.summoning.parent.parent.parent:Find("Group-Default")
        this.Group_Default:GetComponent(typeof(UnityEngine.RectTransform)).localScale = CS.UnityEngine.Vector3(1, 1, 1)
    end
end
--@endregion
-------------------------------垃圾回收-------------------------------
function PumpingCardPage:OnDestroy()
    PumpingCardPage.super.OnDestroy(self)
    self:off(Constants.ShowUI.PumpingCardPage)
end
-------------------------------创建再生仪式界面-------------------------------
function PumpingCardPage:CreateRegenerate()
    --再生仪式界面
    if this.regenerate ~= nil then
        this.regenerate:SetActive(true)
        this.down.gameObject:SetActive(false)
    else
        this.down.gameObject:SetActive(false)

        local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/pumpingCard/this.regenerate.prefab")
        assert(asset)
        this.regenerate = asset:Instantiate()
        this.regenerate.transform:SetParent(this.summoning.transform, false)
    end
end
-------------------------------创建召唤仪式界面-------------------------------
function PumpingCardPage:OpenSummoning()
    if this.regenerate ~= nil then
        this.regenerate.gameObject:SetActive(false)
        this.down.gameObject:SetActive(true)
        local jybtn = this.summoning:Find("top/page/line/jy/btn")
        --组件判空
        -- if jybtn.gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)) then
        --     jybtn.gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
        -- else
        --     jybtn.gameObject:AddComponent(typeof(UnityEngine.CanvasGroup))
        jybtn.gameObject:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
    -- end
    end
end
--@region----------------------创建抽卡特效界面-------------------------------
-------------------------------单抽-------------------------------
function PumpingCardPage:CreateGetCartPage(event)
    --查看抽卡特效界面
    if this.roleGet == nil then
        local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/pumpingCard/roleGet.prefab")
        assert(asset)
        this.roleGet = asset:Instantiate()
        this.roleGet.transform:SetParent(this.summoning.transform, false)
    else
        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
    end

    --  点击隐藏
    local btnTg = this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UI.Button))
    btnTg:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0

    -- 服务端返回的数据设置到UI上
    if table.nums(event["banish"]) ~= 0 then
        for k, v in pairs(event["banish"]) do
            if table.nums(v) ~= 0 then
                for k1, v1 in pairs(v) do
                    --dump("<color=#FF3A00>@</color>")
                    --dump("没新卡分解了！")
                    --显示分解信息
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UI.Text)).text = "已拥有该英雄，自动转化为"
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    --获取json数据
                    local hero = dbdata.GetTable("hero")
                    for _, heroindex in pairs(hero) do
                        --获取服务端发的卡池数据
                        --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                        if heroindex.id == v1["cid"] then
                            if heroindex.name == "0" then
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname
                            else
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname .. "·" .. heroindex.name
                            end
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UI.Text)).text = heroindex.talk

                            --通过质量值显示不同质量图标
                            local pz_Sprite = this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite
                            if heroindex.quality == 1 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_white3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("9E9B96")
                            elseif heroindex.quality == 2 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_bule3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("4991FD")
                            elseif heroindex.quality == 3 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_purple3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("D852FF")
                            elseif heroindex.quality == 4 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_gold3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("F6B730")
                            elseif heroindex.quality == 5 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_red3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("FF2F1C")
                            end

                            --//TODO 通过["groupId"]和质量名称查找立绘spine预制
                            local prefab_Name = "Assets/Art/Role/cell2/" .. heroindex["groupId"] .. "_" .. heroindex["quality"] .. ".prefab"
                            local asset = CS.TJ.BundleManager.Instance:LoadAsset(prefab_Name)
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------加载spine预制----------------------")
                            assert(asset)
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------spine资源断言----------------------")
                            dump(asset)
                            dump("----------------------spine资源断言----------------------")
                            local spine_prefab = asset:Instantiate()
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------实例化spine资源----------------------")
                            spine_prefab.transform:SetParent(this.roleInfoSpineStage_prefab.transform, false)
                            --并隐藏界面内的其他UI
                            this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("probability"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        end
                    end

                    --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                    --抽卡后分解获奖的图标对象
                    if this.itemIcon == nil then
                        local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                        -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                        assert(asset)
                        this.itemIcon = asset:Instantiate()
                    end
                    local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                    CS.Utils.DestroyAllChildren(Content)
                    --删除所有子对象
                    local items = dbdata.GetTable("items")
                    for k_itemsnum, v_itemsnum in pairs(v1["reward"]["items"]) do
                        local itemObject = Object.Instantiate(this.itemIcon, Content)
                        for k_items, v_items in pairs(items) do
                            if v_items.id == v1["reward"]["items"][k_itemsnum]["id"] then
                                itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v1["reward"]["items"][k_itemsnum]["num"]
                                local itemIcon_num = v1["reward"]["items"][k_itemsnum]["num"]
                                --//TODO 点击结算界面cell弹出详情
                                this:buttonOn(
                                    itemObject.transform:Find("itemIcon"),
                                    "",
                                    function()
                                        local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                        local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                        assert(propInfoFather_asset)
                                        local propInfoFather = propInfoFather_asset:Instantiate()
                                        propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                        --名称设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                        --对话设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                        --数量设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                        --头像设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                            ResourceManager.GetProp(v_items.icon)

                                        this:buttonOn(
                                            propInfoFather.transform:Find("bg"),
                                            "",
                                            function()
                                                GameObject.Destroy(propInfoFather)
                                            end
                                        )
                                    end
                                )
                            end
                        end
                    end
                end
            end
        end
    elseif table.nums(event["new"]) ~= 0 then
        for q, d in pairs(event["new"]) do
            if table.nums(d) ~= 0 then
                --dump("<color=#FF3A00>@</color>")
                --dump("新卡")
                --显示新卡信息
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                --获取json数据
                local hero = dbdata.GetTable("hero")
                for _, heroindex in pairs(hero) do
                    --获取服务端发的卡池数据
                    --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                    if heroindex.id == d["cid"] then
                        if heroindex.name == "0" then
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname
                        else
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname .. "·" .. heroindex.name
                        end
                        this.roleGet.transform:Find("info"):GetComponent(typeof(UI.Text)).text = heroindex.talk

                        --通过质量值显示不同质量图标
                        local pz_Sprite = this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite
                        if heroindex.quality == 1 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_white3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("9E9B96")
                        elseif heroindex.quality == 2 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_bule3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("4991FD")
                        elseif heroindex.quality == 3 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_purple3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("D852FF")
                        elseif heroindex.quality == 4 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_gold3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("F6B730")
                        elseif heroindex.quality == 5 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_red3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("FF2F1C")
                        end

                        --//TODO 通过["groupId"]和质量名称查找立绘spine预制
                        local prefab_Name = "Assets/Art/Role/cell2/" .. heroindex["groupId"] .. "_" .. heroindex["quality"] .. ".prefab"
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(prefab_Name)
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------加载spine预制----------------------")
                        assert(asset)
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------spine资源断言----------------------")
                        local spine_prefab = asset:Instantiate()
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------实例化spine资源----------------------")
                        spine_prefab.transform:SetParent(this.roleInfoSpineStage_prefab.transform, false)
                        --并隐藏界面内的其他UI
                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("probability"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    end
                end
            end
        end
    elseif table.nums(event["upgrade"]) ~= 0 then
        for k_upgrade, v_upgrade in pairs(event["upgrade"]) do
            if table.nums(v_upgrade) ~= 0 then
                for k1, v1 in pairs(v_upgrade) do
                    --dump("<color=#FF3A00>@</color>")
                    --dump("没新卡分解了！")
                    --显示分解信息
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UI.Text)).text = "已拥有该英雄，自动升阶"
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    --获取json数据
                    local hero = dbdata.GetTable("hero")
                    for _, heroindex in pairs(hero) do
                        --获取服务端发的卡池数据
                        --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                        if heroindex.id == v1["upgraded_hero"]["cid"] then
                            if heroindex.name == "0" then
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname
                            else
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname .. "·" .. heroindex.name
                            end
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UI.Text)).text = heroindex.talk

                            --通过质量值显示不同质量图标
                            local pz_Sprite = this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite
                            if heroindex.quality == 1 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_white3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("9E9B96")
                            elseif heroindex.quality == 2 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_bule3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("4991FD")
                            elseif heroindex.quality == 3 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_purple3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("D852FF")
                            elseif heroindex.quality == 4 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_gold3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("F6B730")
                            elseif heroindex.quality == 5 then
                                this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_red3")
                                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("FF2F1C")
                            end

                            --//TODO 通过["groupId"]和质量名称查找立绘spine预制
                            local prefab_Name = "Assets/Art/Role/cell2/" .. heroindex["groupId"] .. "_" .. heroindex["quality"] .. ".prefab"
                            local asset = CS.TJ.BundleManager.Instance:LoadAsset(prefab_Name)
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------加载spine预制----------------------")
                            assert(asset)
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------spine资源断言----------------------")
                            local spine_prefab = asset:Instantiate()
                            dump("<color=#FF3A00>@</color>")
                            dump("----------------------实例化spine资源----------------------")
                            spine_prefab.transform:SetParent(this.roleInfoSpineStage_prefab.transform, false)
                            --并隐藏界面内的其他UI
                            this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.summoning:Find("probability"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        end
                    end

                    --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                    if this.itemIcon == nil then
                        local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                        -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                        assert(asset)
                        this.itemIcon = asset:Instantiate()
                    end
                    local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                    CS.Utils.DestroyAllChildren(Content)
                    --删除所有子对象
                    local items = dbdata.GetTable("items")
                    for k_itemsnum, v_itemsnum in pairs(v1["reward"]["items"]) do
                        local itemObject = Object.Instantiate(this.itemIcon, Content)
                        for k_items, v_items in pairs(items) do
                            if v_items.id == v1["reward"]["items"][k_itemsnum]["id"] then
                                itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v1["reward"]["items"][k_itemsnum]["num"]
                                local itemIcon_num = v1["reward"]["items"][k_itemsnum]["num"]

                                --//TODO 点击结算界面cell弹出详情
                                this:buttonOn(
                                    itemObject.transform:Find("itemIcon"),
                                    "",
                                    function()
                                        local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                        local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                        assert(propInfoFather_asset)
                                        local propInfoFather = propInfoFather_asset:Instantiate()
                                        propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                        --名称设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                        --对话设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                        --数量设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                        --头像设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                            ResourceManager.GetProp(v_items.icon)

                                        this:buttonOn(
                                            propInfoFather.transform:Find("bg"),
                                            "",
                                            function()
                                                GameObject.Destroy(propInfoFather)
                                            end
                                        )
                                    end
                                )
                            end
                        end
                    end
                end
            end
        end
    end

    -- 定义计数器
    this.countAdd = 2
    --把抽到新卡，分解，和升级的卡片放入GetTenCard表中方便通过索引方式查找
    local GetTenCardId = {}
    local GetTenCardStatus = {}
    local GetTenCardReward = {}
    --把抽到新卡，分解，和升级的卡片放入GetTenCard表中方便通过索引方式查找
    for k_new, v_new in pairs(event["new"]) do
        table.insert(GetTenCardId, v_new["cid"])
        table.insert(GetTenCardStatus, "new")
        table.insert(GetTenCardReward, {})
    end
    for k_banish, v_banish in pairs(event["banish"]) do
        for k_v_banish, v_v_banish in pairs(v_banish) do
            table.insert(GetTenCardId, v_v_banish["cid"])
            table.insert(GetTenCardStatus, "banish")
            if v_v_banish["reward"] ~= nil then
                table.insert(GetTenCardReward, v_v_banish["reward"]["items"])
            else
                table.insert(GetTenCardReward, {})
            end
        end
    end
    for k_upgrade, v_upgrade in pairs(event["upgrade"]) do
        for k_v_upgrade, v_v_upgrade in pairs(v_upgrade) do
            if v_v_upgrade["upgraded_hero"] ~= nil then
                table.insert(GetTenCardId, v_v_upgrade["upgraded_hero"]["cid"])
            else
                table.insert(GetTenCardId, {})
            end

            table.insert(GetTenCardStatus, "upgrade")
            table.insert(GetTenCardReward, v_v_upgrade["reward"]["items"])
        end
    end
    --显示获得后续的九张卡以及十张之后的获奖界面和第十一次点击的退出获奖界面
    this:buttonOn(
        this.roleGet.transform:Find("allScreen"),
        "",
        function()
            --删除spine,并隐藏界面内的其他UI
            CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)

            -- //TODO 第十个后，并显示获奖情况，TODO 再显示跳出功能
            if this.countAdd == 2 then
                --//TODO 获奖情况界面
                --存储十连抽结算获奖界面
                if this.getGoods == nil then
                    local getGoods_Path = "Assets/Art/UI/Prefab/pumpingCard/getGoodsFather.prefab"
                    local asset = CS.TJ.BundleManager.Instance:LoadAsset(getGoods_Path)
                    assert(asset)
                    this.getGoods = asset:Instantiate()
                    this.getGoods.transform:SetParent(this.roleGet.transform:Find("spine"), false)
                else
                    this.getGoods.gameObject:SetActive(true)
                end

                CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content").transform)
                CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content").transform)
                -- 设置十连消耗灵魂宝石数量：

                if this.line_2:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息

                    this.eventStaticId = this.eventStatic[1]["Id"]
                    --ID
                    this.discount = this.eventStatic[1]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[1]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[1]["price"]
                elseif this.line_2:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息
                    this.eventStaticId = this.eventStatic[2]["Id"]
                    --ID
                    this.discount = this.eventStatic[2]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[2]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[2]["price"]
                elseif this.line_2:Find("Toggle3/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息
                    this.eventStaticId = this.eventStatic[3]["Id"]
                    --ID
                    this.discount = this.eventStatic[3]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[3]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[3]["price"]
                --单价
                end

                this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2/tips/num"):GetComponent(typeof(UI.Text)).text =
                    "x" .. math.ceil(this.frepricee_time_remain * this.discount * 0.01 * 10)
                --//TODO 获奖情况界面item
                --//TODO 设置获奖icon
                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                local asset2 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                assert(asset2)
                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/roleIconFather.prefab"
                local asset3 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                assert(asset3)
                --英雄item实例化
                for k_GetTenCardId, v_GetTenCardId in pairs(GetTenCardId) do
                    if GetTenCardStatus[k_GetTenCardId] ~= "banish" then
                        local itemIcon1 = asset3:Instantiate()
                        itemIcon1.transform:Find("roleIcon/num"):GetComponent(typeof(UI.Text)).text = ""
                        --头像
                        for i_hero, v_hero in ipairs(dbdata.GetTable("hero")) do
                            if v_GetTenCardId == v_hero.id then
                                for i_icon, v_icon in ipairs(dbdata.GetTable("artResources")) do
                                    if v_hero.dressId == v_icon.id then
                                        itemIcon1.transform:Find("roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetHead(v_icon.portrait)
                                        if GetTenCardStatus[k_GetTenCardId] == "upgrade" then
                                            itemIcon1.transform:GetChild(0):GetChild(7).gameObject:SetActive(true)
                                        end
                                        --//TODO 点击结算界面cell弹出详情
                                        this:buttonOn(
                                            itemIcon1.transform:Find("roleIcon"),
                                            "",
                                            function()
                                                local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather.prefab"
                                                local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                                assert(propInfoFather_asset)
                                                local propInfoFather = propInfoFather_asset:Instantiate()
                                                propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                                --名称设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_hero.nickname .. "·" .. v_hero.name

                                                --对话设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_hero.talk
                                                --头像设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetHead(v_icon.portrait)
                                                --质量颜色
                                                if v_hero.quality == 1 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_white")
                                                elseif v_hero.quality == 2 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_bule")
                                                elseif v_hero.quality == 3 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_purple")
                                                elseif v_hero.quality == 4 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_gold")
                                                elseif v_hero.quality == 5 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_red")
                                                end
                                                this:buttonOn(
                                                    propInfoFather.transform:Find("bg"),
                                                    "",
                                                    function()
                                                        GameObject.Destroy(propInfoFather)
                                                    end
                                                )
                                            end
                                        )
                                    end
                                end
                                if v_hero.quality == 1 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_white")
                                elseif v_hero.quality == 2 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_bule")
                                elseif v_hero.quality == 3 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_purple")
                                elseif v_hero.quality == 4 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_gold")
                                elseif v_hero.quality == 5 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_red")
                                end
                            end
                        end

                        itemIcon1.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content"), false)
                    end
                end
                --物品item实例化
                for k_BanishGetGoods_data, v_BanishGetGoods_data in pairs(this.BanishGetGoods_data) do
                    local itemIcon2 = asset2:Instantiate()
                    itemIcon2.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                    local items = dbdata.GetTable("items")
                    for k_items, v_items in pairs(items) do
                        if v_items["id"] == v_BanishGetGoods_data["id"] then
                            itemIcon2.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)

                            --//TODO 点击结算界面cell弹出详情
                            this:buttonOn(
                                itemIcon2.transform:Find("itemIcon"),
                                "",
                                function()
                                    local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                    local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                    assert(propInfoFather_asset)
                                    local propInfoFather = propInfoFather_asset:Instantiate()
                                    propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                    --名称设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                    --对话设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                    --数量设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                                    --头像设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                        ResourceManager.GetProp(v_items.icon)

                                    this:buttonOn(
                                        propInfoFather.transform:Find("bg"),
                                        "",
                                        function()
                                            GameObject.Destroy(propInfoFather)
                                        end
                                    )
                                end
                            )
                        end
                    end
                    itemIcon2.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content"), false)
                end

                --监听再召唤一次
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2"),
                    "",
                    function()
                        PumpingCardPage:GetOneC2S()--告诉服务器单抽
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )
                --监听确认奖励按钮，即跳过十连
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen"),
                    "",
                    function()
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )
                --监听点击背景，即确认奖励和跳过十连
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/bg"),
                    "",
                    function()
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )

                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                this.roleGet.transform:Find("pz"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("nameBg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                --获得物品界面根据数量自适应高度
                local Scroll_View = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View")
                local Scroll_View_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content")
                local Scroll_View2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2")
                local Scroll_View2_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content")
                local m_title = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title")
                local m_title2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title2")
                local m_bg = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/bg")

                if Scroll_View_Content.childCount ~= 0 and Scroll_View2_Content.childCount ~= 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 41.9)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 545.4)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
                elseif Scroll_View_Content.childCount == 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
                elseif Scroll_View2_Content.childCount == 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -265.8)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -217)
                end
            end
            -- 隐藏奖励界面
            if this.countAdd == 3 then
                if this.getGoods ~= nil then
                    this.getGoods.gameObject:SetActive(false)
                end
                --删除spine,并隐藏界面内的其他UI
                CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)

                this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                this.countAdd = 1
                -- 第十个后重置计数器
                GetTenCardId = {}
                GetTenCardStatus = {}
                this:buttonOff(this.roleGet.transform:Find("allScreen"), "")
            end

            this.countAdd = this.countAdd + 1
            --//TODO 计数器开始计数

            this:buttonOff(this.roleGet.transform:Find("allScreen"), "")
        end
    )
end
---------------------------------//TODO十连-------------------------------
function PumpingCardPage:CreateGetTenCartPage(event)
    -- 定义计数器
    this.countAdd = 2

    --把抽到新卡，分解，和升级的卡片放入GetTenCard表中方便通过索引方式查找
    local GetTenCardId = {}
    local GetTenCardStatus = {}
    local GetTenCardReward = {}

    --显示抽卡的弹窗界面roleGet
    if this.roleGet == nil then
        local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/pumpingCard/roleGet.prefab")
        assert(asset)
        this.roleGet = asset:Instantiate()
        this.roleGet.transform:SetParent(this.summoning.transform, false)
        --显示跳过按钮
        this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
    else
        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

        this.roleGet.transform:Find("pz"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.roleGet.transform:Find("nameBg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        --显示跳过按钮
        this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
    end

    --把抽到新卡，分解，和升级的卡片放入GetTenCard表中方便通过索引方式查找
    for k_new, v_new in pairs(event["new"]) do
        table.insert(GetTenCardId, v_new["cid"])
        table.insert(GetTenCardStatus, "new")
        table.insert(GetTenCardReward, {})
    end
    for k_banish, v_banish in pairs(event["banish"]) do
        for k_v_banish, v_v_banish in pairs(v_banish) do
            table.insert(GetTenCardId, v_v_banish["cid"])
            table.insert(GetTenCardStatus, "banish")
            if v_v_banish["reward"] ~= nil then
                table.insert(GetTenCardReward, v_v_banish["reward"]["items"])
            else
                table.insert(GetTenCardReward, {})
            end
        end
    end
    for k_upgrade, v_upgrade in pairs(event["upgrade"]) do
        for k_v_upgrade, v_v_upgrade in pairs(v_upgrade) do
            if v_v_upgrade["upgraded_hero"] ~= nil then
                table.insert(GetTenCardId, v_v_upgrade["upgraded_hero"]["cid"])
            else
                table.insert(GetTenCardId, {})
            end

            table.insert(GetTenCardStatus, "upgrade")
            table.insert(GetTenCardReward, v_v_upgrade["reward"]["items"])
        end
    end

    --删除spine,并隐藏界面内的其他UI
    CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)

    --显示获得第一张卡
    local hero = dbdata.GetTable("hero")
    if this.countAdd == 2 then
        for _, heroindex in pairs(hero) do
            if heroindex.id == GetTenCardId[1] then
                --显示昵名
                this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname
                --显示对话
                this.roleGet.transform:Find("info"):GetComponent(typeof(UI.Text)).text = heroindex.talk

                --通过质量值显示不同质量图标
                local pz_Sprite = this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite
                if heroindex.quality == 1 then
                    this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_white3")
                    this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("9E9B96")
                elseif heroindex.quality == 2 then
                    this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_bule3")
                    this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("4991FD")
                elseif heroindex.quality == 3 then
                    this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_purple3")
                    this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("D852FF")
                elseif heroindex.quality == 4 then
                    this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_gold3")
                    this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("F6B730")
                elseif heroindex.quality == 5 then
                    this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_red3")
                    this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("FF2F1C")
                end

                --//TODO 通过["groupId"]和质量名称查找立绘spine预制
                local prefab_Name = "Assets/Art/Role/cell2/" .. heroindex["groupId"] .. "_" .. heroindex["quality"] .. ".prefab"
                local asset = CS.TJ.BundleManager.Instance:LoadAsset(prefab_Name)
                dump("<color=#FF3A00>@</color>")
                dump("----------------------加载spine预制----------------------")
                assert(asset)
                dump("<color=#FF3A00>@</color>")
                dump("----------------------spine资源断言----------------------")
                local spine_prefab = asset:Instantiate()
                dump("<color=#FF3A00>@</color>")
                dump("----------------------实例化spine资源----------------------")
                --spine_prefab.transform.localScale = CS.UnityEngine.Vector3(1.13, 1.13, 1.13)
                spine_prefab.transform:SetParent(this.roleInfoSpineStage_prefab.transform, false)
                --并隐藏界面内的其他UI
                this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.summoning:Find("probability"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0

                --通过记录当前抽卡状态来判断是否是新卡或是分解或是升阶
                --如果是新卡，不显示奖励界面
                --如果是分解，显示奖励界面
                --如果是升阶，显示奖励界面
                if GetTenCardStatus[1] == "new" then
                    --显示新卡信息
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                elseif GetTenCardStatus[1] == "banish" then
                    --显示新卡信息
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                    if this.itemIcon == nil then
                        local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                        -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                        assert(asset)
                        this.itemIcon = asset:Instantiate()
                    end
                    local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                    CS.Utils.DestroyAllChildren(Content)
                    --删除所有子对象
                    local items = dbdata.GetTable("items")
                    for k_itemsnum, v_itemsnum in pairs(GetTenCardReward[1]) do
                        local itemObject = Object.Instantiate(this.itemIcon, Content)
                        for k_items, v_items in pairs(items) do
                            if v_items.id == GetTenCardReward[1][k_itemsnum]["id"] then
                                itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. GetTenCardReward[1][k_itemsnum]["num"]
                                local itemIcon_num = GetTenCardReward[1][k_itemsnum]["num"]

                                --//TODO 点击结算界面cell弹出详情
                                this:buttonOn(
                                    itemObject.transform:Find("itemIcon"),
                                    "",
                                    function()
                                        local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                        local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                        assert(propInfoFather_asset)
                                        local propInfoFather = propInfoFather_asset:Instantiate()
                                        propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                        --名称设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                        --对话设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                        --数量设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                        --头像设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                            ResourceManager.GetProp(v_items.icon)

                                        this:buttonOn(
                                            propInfoFather.transform:Find("bg"),
                                            "",
                                            function()
                                                GameObject.Destroy(propInfoFather)
                                            end
                                        )
                                    end
                                )
                            end
                        end
                    end
                elseif GetTenCardStatus[1] == "upgrade" then
                    --显示新卡信息
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                    if this.itemIcon == nil then
                        local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                        -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                        assert(asset)
                        this.itemIcon = asset:Instantiate()
                    end
                    local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                    CS.Utils.DestroyAllChildren(Content)
                    --删除所有子对象
                    local items = dbdata.GetTable("items")
                    for k_itemsnum, v_itemsnum in pairs(GetTenCardReward[1]) do
                        local itemObject = Object.Instantiate(this.itemIcon, Content)
                        for k_items, v_items in pairs(items) do
                            if v_items.id == GetTenCardReward[1][k_itemsnum]["id"] then
                                itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. GetTenCardReward[1][k_itemsnum]["num"]
                                local itemIcon_num = GetTenCardReward[1][k_itemsnum]["num"]
                                --//TODO 点击结算界面cell弹出详情
                                this:buttonOn(
                                    itemObject.transform:Find("itemIcon"),
                                    "",
                                    function()
                                        local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                        local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                        assert(propInfoFather_asset)
                                        local propInfoFather = propInfoFather_asset:Instantiate()
                                        propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                        --名称设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                        --对话设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                        --数量设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                        --头像设置：
                                        propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                            ResourceManager.GetProp(v_items.icon)

                                        this:buttonOn(
                                            propInfoFather.transform:Find("bg"),
                                            "",
                                            function()
                                                GameObject.Destroy(propInfoFather)
                                            end
                                        )
                                    end
                                )
                            end
                        end
                    end
                end
            end
        end
    end

    --显示获得后续的九张卡以及十张之后的获奖界面和第十一次点击的退出获奖界面
    this:buttonOn(
        this.roleGet.transform:Find("allScreen"),
        "",
        function()
            --删除spine,并隐藏界面内的其他UI
            CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)

            --//TODO 从第二个开始，重新实例化spine
            if this.countAdd > 1 and table.nums(GetTenCardId) > 0 and this.countAdd < 11 then
                local hero = dbdata.GetTable("hero")
                for _, heroindex in pairs(hero) do
                    if heroindex.id == GetTenCardId[this.countAdd] then
                        --显示抽卡特效主界面
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                        --//TODO 通过["groupId"]和质量名称查找立绘spine预制
                        local prefab_Name = "Assets/Art/Role/cell2/" .. heroindex["groupId"] .. "_" .. heroindex["quality"] .. ".prefab"
                        local asset = CS.TJ.BundleManager.Instance:LoadAsset(prefab_Name)
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------加载spine预制----------------------")
                        assert(asset)
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------spine资源断言----------------------")
                        local spine_prefab = asset:Instantiate()
                        dump("<color=#FF3A00>@</color>")
                        dump("----------------------实例化spine资源----------------------")
                        spine_prefab.transform:SetParent(this.roleInfoSpineStage_prefab.transform, false)
                        --并隐藏界面内的其他UI
                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.summoning:Find("probability"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0

                        --显示昵名
                        this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).text = heroindex.nickname
                        --显示对话
                        this.roleGet.transform:Find("info"):GetComponent(typeof(UI.Text)).text = heroindex.talk

                        --通过质量值显示不同质量图标
                        local pz_Sprite = this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite
                        if heroindex.quality == 1 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_white3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("9E9B96")
                        elseif heroindex.quality == 2 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_bule3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("4991FD")
                        elseif heroindex.quality == 3 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_purple3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("D852FF")
                        elseif heroindex.quality == 4 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_gold3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("F6B730")
                        elseif heroindex.quality == 5 then
                            this.roleGet.transform:Find("pz"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetRole("role_red3")
                            this.roleGet.transform:Find("nameBg/name"):GetComponent(typeof(UI.Text)).color = HexColor("FF2F1C")
                        end

                        --通过记录当前抽卡状态来判断是否是新卡或是分解或是升阶
                        --如果是新卡，不显示奖励界面
                        --如果是分解，显示奖励界面
                        --如果是升阶，显示奖励界面
                        if GetTenCardStatus[this.countAdd] == "new" then
                            --显示新卡信息
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                        elseif GetTenCardStatus[this.countAdd] == "banish" then
                            --显示新卡信息
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                            --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                            if this.itemIcon == nil then
                                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                                -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                                local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                                assert(asset)
                                this.itemIcon = asset:Instantiate()
                            end
                            local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                            CS.Utils.DestroyAllChildren(Content)
                            --删除所有子对象
                            local items = dbdata.GetTable("items")
                            for k_itemsnum, v_itemsnum in pairs(GetTenCardReward[this.countAdd]) do
                                local itemObject = Object.Instantiate(this.itemIcon, Content)
                                for k_items, v_items in pairs(items) do
                                    if v_items.id == GetTenCardReward[this.countAdd][k_itemsnum]["id"] then
                                        itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                        itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. GetTenCardReward[this.countAdd][k_itemsnum]["num"]
                                        local itemIcon_num = GetTenCardReward[this.countAdd][k_itemsnum]["num"]
                                        --//TODO 点击结算界面cell弹出详情
                                        this:buttonOn(
                                            itemObject.transform:Find("itemIcon"),
                                            "",
                                            function()
                                                local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                                local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                                assert(propInfoFather_asset)
                                                local propInfoFather = propInfoFather_asset:Instantiate()
                                                propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                                --名称设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                                --对话设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                                --数量设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                                --头像设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp(v_items.icon)

                                                this:buttonOn(
                                                    propInfoFather.transform:Find("bg"),
                                                    "",
                                                    function()
                                                        GameObject.Destroy(propInfoFather)
                                                    end
                                                )
                                            end
                                        )
                                    end
                                end
                            end
                        elseif GetTenCardStatus[this.countAdd] == "upgrade" then
                            --显示新卡信息
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                            --//TODO 分解后通过id，查找json中的图片名称，并实例化列表更换图标。
                            if this.itemIcon == nil then
                                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                                -- local asset = CS.TJ.BundleManager.Instance:LoadAsset("Assets/Art/UI/Prefab/common/itemIcon.prefab")
                                local asset = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                                assert(asset)
                                this.itemIcon = asset:Instantiate()
                            end
                            local Content = this.roleGet.transform:Find("info2/Loop Horizontal Scroll Rect/Content")
                            CS.Utils.DestroyAllChildren(Content)
                            --删除所有子对象
                            local items = dbdata.GetTable("items")
                            for k_itemsnum, v_itemsnum in pairs(GetTenCardReward[this.countAdd]) do
                                local itemObject = Object.Instantiate(this.itemIcon, Content)
                                for k_items, v_items in pairs(items) do
                                    if v_items.id == GetTenCardReward[this.countAdd][k_itemsnum]["id"] then
                                        itemObject.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)
                                        itemObject.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. GetTenCardReward[this.countAdd][k_itemsnum]["num"]
                                        local itemIcon_num = GetTenCardReward[this.countAdd][k_itemsnum]["num"]

                                        --//TODO 点击结算界面cell弹出详情
                                        this:buttonOn(
                                            itemObject.transform:Find("itemIcon"),
                                            "",
                                            function()
                                                local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                                local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                                assert(propInfoFather_asset)
                                                local propInfoFather = propInfoFather_asset:Instantiate()
                                                propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                                --名称设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                                --对话设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                                --数量设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. itemIcon_num
                                                --头像设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp(v_items.icon)

                                                this:buttonOn(
                                                    propInfoFather.transform:Find("bg"),
                                                    "",
                                                    function()
                                                        GameObject.Destroy(propInfoFather)
                                                    end
                                                )
                                            end
                                        )
                                    end
                                end
                            end
                        end
                    end
                end
            end
            -- //TODO 第十个后，并显示获奖情况，TODO 再显示跳出功能
            if this.countAdd == 11 then
                --//TODO 获奖情况界面
                --存储十连抽结算获奖界面
                if this.getGoods == nil then
                    local getGoods_Path = "Assets/Art/UI/Prefab/pumpingCard/getGoodsFather.prefab"
                    local asset = CS.TJ.BundleManager.Instance:LoadAsset(getGoods_Path)
                    assert(asset)
                    this.getGoods = asset:Instantiate()
                    this.getGoods.transform:SetParent(this.roleGet.transform:Find("spine"), false)
                else
                    this.getGoods.gameObject:SetActive(true)
                end

                CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content").transform)
                CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content").transform)
                -- 设置十连消耗灵魂宝石数量：

                if this.line_2:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息

                    this.eventStaticId = this.eventStatic[1]["Id"]
                    --ID
                    this.discount = this.eventStatic[1]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[1]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[1]["price"]
                elseif this.line_2:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息
                    this.eventStaticId = this.eventStatic[2]["Id"]
                    --ID
                    this.discount = this.eventStatic[2]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[2]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[2]["price"]
                elseif this.line_2:Find("Toggle3/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                    --获取卡池信息
                    this.eventStaticId = this.eventStatic[3]["Id"]
                    --ID
                    this.discount = this.eventStatic[3]["discount"]
                    --折扣
                    this.free_time_remain = this.eventStatic[3]["free_time_remain"]
                    --剩余免费时间
                    this.frepricee_time_remain = this.eventStatic[3]["price"]
                --单价
                end

                this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2/tips/num"):GetComponent(typeof(UI.Text)).text =
                    "x" .. math.ceil(this.frepricee_time_remain * this.discount * 0.01 * 10)
                --//TODO 获奖情况界面item
                --//TODO 设置获奖icon
                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
                local asset2 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                assert(asset2)
                local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/roleIconFather.prefab"
                local asset3 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
                assert(asset3)
                --英雄item实例化
                for k_GetTenCardId, v_GetTenCardId in pairs(GetTenCardId) do
                    if GetTenCardStatus[k_GetTenCardId] ~= "banish" then
                        local itemIcon1 = asset3:Instantiate()
                        itemIcon1.transform:Find("roleIcon/num"):GetComponent(typeof(UI.Text)).text = ""
                        --头像
                        for i_hero, v_hero in ipairs(dbdata.GetTable("hero")) do
                            if v_GetTenCardId == v_hero.id then
                                for i_icon, v_icon in ipairs(dbdata.GetTable("artResources")) do
                                    if v_hero.dressId == v_icon.id then
                                        itemIcon1.transform:Find("roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetHead(v_icon.portrait)
                                        if GetTenCardStatus[k_GetTenCardId] == "upgrade" then
                                            itemIcon1.transform:GetChild(0):GetChild(7).gameObject:SetActive(true)
                                        end
                                        --//TODO 点击结算界面cell弹出详情
                                        this:buttonOn(
                                            itemIcon1.transform:Find("roleIcon"),
                                            "",
                                            function()
                                                local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather.prefab"
                                                local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                                assert(propInfoFather_asset)
                                                local propInfoFather = propInfoFather_asset:Instantiate()
                                                propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                                --名称设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_hero.nickname .. "·" .. v_hero.name

                                                --对话设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_hero.talk
                                                --头像设置：
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetHead(v_icon.portrait)
                                                --质量颜色
                                                if v_hero.quality == 1 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_white")
                                                elseif v_hero.quality == 2 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_bule")
                                                elseif v_hero.quality == 3 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_purple")
                                                elseif v_hero.quality == 4 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_gold")
                                                elseif v_hero.quality == 5 then
                                                    propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                        ResourceManager.GetProp("iconBg_red")
                                                end
                                                this:buttonOn(
                                                    propInfoFather.transform:Find("bg"),
                                                    "",
                                                    function()
                                                        GameObject.Destroy(propInfoFather)
                                                    end
                                                )
                                            end
                                        )
                                    end
                                end
                                if v_hero.quality == 1 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_white")
                                elseif v_hero.quality == 2 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_bule")
                                elseif v_hero.quality == 3 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_purple")
                                elseif v_hero.quality == 4 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_gold")
                                elseif v_hero.quality == 5 then
                                    itemIcon1.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_red")
                                end
                            end
                        end

                        itemIcon1.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content"), false)
                    end
                end
                --物品item实例化
                for k_BanishGetGoods_data, v_BanishGetGoods_data in pairs(this.BanishGetGoods_data) do
                    local itemIcon2 = asset2:Instantiate()
                    itemIcon2.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                    local items = dbdata.GetTable("items")
                    for k_items, v_items in pairs(items) do
                        if v_items["id"] == v_BanishGetGoods_data["id"] then
                            itemIcon2.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)

                            --//TODO 点击结算界面cell弹出详情
                            this:buttonOn(
                                itemIcon2.transform:Find("itemIcon"),
                                "",
                                function()
                                    local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                    local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                    assert(propInfoFather_asset)
                                    local propInfoFather = propInfoFather_asset:Instantiate()
                                    propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                    --名称设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                    --对话设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                    --数量设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                                    --头像设置：
                                    propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite =
                                        ResourceManager.GetProp(v_items.icon)

                                    this:buttonOn(
                                        propInfoFather.transform:Find("bg"),
                                        "",
                                        function()
                                            GameObject.Destroy(propInfoFather)
                                        end
                                    )
                                end
                            )
                        end
                    end
                    itemIcon2.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content"), false)
                end

                --监听再召唤十次
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2"),
                    "",
                    function()
                        PumpingCardPage:GetTenC2S()
                        --告诉服务器十连抽
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )
                --监听确认奖励按钮，即跳过十连
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen"),
                    "",
                    function()
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )
                --监听点击背景，即确认奖励和跳过十连
                this:buttonOn(
                    this.roleGet.transform:Find("spine/getGoodsFather/bg"),
                    "",
                    function()
                        --跳过十连
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                        this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                        this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                        this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                        if this.getGoods ~= nil then
                            this.getGoods.gameObject:SetActive(false)
                        end

                        this.countAdd = 1
                        -- 第十个后重置计数器
                        GetTenCardId = {}
                        GetTenCardStatus = {}

                        --删除spine,并隐藏界面内的其他UI
                        CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                    end
                )

                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                this.roleGet.transform:Find("pz"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("nameBg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:Find("btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                --获得物品界面根据数量自适应高度
                local Scroll_View = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View")
                local Scroll_View_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content")
                local Scroll_View2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2")
                local Scroll_View2_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content")
                local m_title = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title")
                local m_title2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title2")
                local m_bg = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/bg")

                if Scroll_View_Content.childCount ~= 0 and Scroll_View2_Content.childCount ~= 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 41.9)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 545.4)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
                elseif Scroll_View_Content.childCount == 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
                elseif Scroll_View2_Content.childCount == 0 then
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                    m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                    Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -265.8)
                    m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -217)
                end
            end
            -- 隐藏奖励界面
            if this.countAdd == 12 then
                if this.getGoods ~= nil then
                    this.getGoods.gameObject:SetActive(false)
                end
                --删除spine,并隐藏界面内的其他UI
                CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)

                this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                this.countAdd = 1
                -- 第十个后重置计数器
                GetTenCardId = {}
                GetTenCardStatus = {}
                this:buttonOff(this.roleGet.transform:Find("allScreen"), "")
            end

            this.countAdd = this.countAdd + 1
            --//TODO 计数器开始计数
        end
    )

    --  跳过十连
    this:buttonOn(
        this.summoning.transform:Find("roleGet/btnTg"),
        "",
        function()
            this.countAdd = 12

            --//TODO 获奖情况界面
            if this.getGoods == nil then
                local getGoods_Path = "Assets/Art/UI/Prefab/pumpingCard/getGoodsFather.prefab"
                local asset = CS.TJ.BundleManager.Instance:LoadAsset(getGoods_Path)
                assert(asset)
                this.getGoods = asset:Instantiate()
                this.getGoods.transform:SetParent(this.roleGet.transform:Find("spine"), false)
            else
                this.getGoods.gameObject:SetActive(true)
            end
            CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content").transform)
            CS.Utils.DestroyAllChildren(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content").transform)
            -- 设置十连消耗灵魂宝石数量：
            if this.line_2:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                --获取卡池信息
                this.eventStaticId = this.eventStatic[1]["Id"]
                --ID
                this.discount = this.eventStatic[1]["discount"]
                --折扣
                this.free_time_remain = this.eventStatic[1]["free_time_remain"]
                --剩余免费时间
                this.frepricee_time_remain = this.eventStatic[1]["price"]
            elseif this.line_2:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                --获取卡池信息

                this.eventStaticId = this.eventStatic[2]["Id"]
                --ID
                this.discount = this.eventStatic[2]["discount"]
                --折扣
                this.free_time_remain = this.eventStatic[2]["free_time_remain"]
                --剩余免费时间
                this.frepricee_time_remain = this.eventStatic[2]["price"]
            elseif this.line_2:Find("Toggle3/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
                --获取卡池信息

                this.eventStaticId = this.eventStatic[3]["Id"]
                --ID
                this.discount = this.eventStatic[3]["discount"]
                --折扣
                this.free_time_remain = this.eventStatic[3]["free_time_remain"]
                --剩余免费时间
                this.frepricee_time_remain = this.eventStatic[3]["price"]
            --单价
            end
            this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2/tips/num"):GetComponent(typeof(UI.Text)).text =
                "x" .. math.ceil(this.frepricee_time_remain * this.discount * 0.01 * 10)
            --//TODO 获奖情况界面item
            --//TODO 设置获奖icon
            local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/itemIconFather.prefab"
            local asset2 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
            assert(asset2)
            local itemIcon_Path = "Assets/Art/UI/Prefab/pumpingCard/roleIconFather.prefab"
            local asset3 = CS.TJ.BundleManager.Instance:LoadAsset(itemIcon_Path)
            assert(asset3)
            --英雄item实例化
            for k_GetTenCardId, v_GetTenCardId in pairs(GetTenCardId) do
                if GetTenCardStatus[k_GetTenCardId] ~= "banish" then
                    local itemIcon3 = asset3:Instantiate()
                    itemIcon3.transform:Find("roleIcon/num"):GetComponent(typeof(UI.Text)).text = ""
                    --头像
                    for i_hero, v_hero in ipairs(dbdata.GetTable("hero")) do
                        if v_GetTenCardId == v_hero.id then
                            for i_icon, v_icon in ipairs(dbdata.GetTable("artResources")) do
                                if v_hero.dressId == v_icon.id then
                                    itemIcon3.transform:Find("roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetHead(v_icon.portrait)
                                    if GetTenCardStatus[k_GetTenCardId] == "upgrade" then
                                        itemIcon3.transform:GetChild(0):GetChild(7).gameObject:SetActive(true)
                                    end
                                    --//TODO 点击结算界面cell弹出详情
                                    this:buttonOn(
                                        itemIcon3.transform:Find("roleIcon"),
                                        "",
                                        function()
                                            local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather.prefab"
                                            local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                            assert(propInfoFather_asset)
                                            local propInfoFather = propInfoFather_asset:Instantiate()
                                            propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                            --名称设置：
                                            propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_hero.nickname .. "·" .. v_hero.name

                                            --对话设置：
                                            propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_hero.talk
                                            --头像设置：
                                            propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/roleMask/item"):GetComponent(typeof(UI.Image)).sprite =
                                                ResourceManager.GetHead(v_icon.portrait)
                                            --质量颜色
                                            if v_hero.quality == 1 then
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp("iconBg_white")
                                            elseif v_hero.quality == 2 then
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp("iconBg_bule")
                                            elseif v_hero.quality == 3 then
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp("iconBg_purple")
                                            elseif v_hero.quality == 4 then
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp("iconBg_gold")
                                            elseif v_hero.quality == 5 then
                                                propInfoFather.transform:Find("propInfo/bg/info/roleIcon/roleIconFather/roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite =
                                                    ResourceManager.GetProp("iconBg_red")
                                            end
                                            this:buttonOn(
                                                propInfoFather.transform:Find("bg"),
                                                "",
                                                function()
                                                    GameObject.Destroy(propInfoFather)
                                                end
                                            )
                                        end
                                    )
                                end
                            end
                            if v_hero.quality == 1 then
                                itemIcon3.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_white")
                            elseif v_hero.quality == 2 then
                                itemIcon3.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_bule")
                            elseif v_hero.quality == 3 then
                                itemIcon3.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_purple")
                            elseif v_hero.quality == 4 then
                                itemIcon3.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_gold")
                            elseif v_hero.quality == 5 then
                                itemIcon3.transform:Find("roleIcon/bg"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp("iconBg_red")
                            end
                        end
                    end

                    itemIcon3.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content"), false)
                end
            end
            --物品item实例化
            for k_BanishGetGoods_data, v_BanishGetGoods_data in pairs(this.BanishGetGoods_data) do
                local itemIcon4 = asset2:Instantiate()
                itemIcon4.transform:Find("itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                local items = dbdata.GetTable("items")
                for k_items, v_items in pairs(items) do
                    if v_items["id"] == v_BanishGetGoods_data["id"] then
                        itemIcon4.transform:Find("itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)

                        --//TODO 点击结算界面cell弹出详情
                        this:buttonOn(
                            itemIcon4.transform:Find("itemIcon"),
                            "",
                            function()
                                local propInfoFather_Path = "Assets/Art/UI/Prefab/pumpingCard/propInfoFather2.prefab"
                                local propInfoFather_asset = CS.TJ.BundleManager.Instance:LoadAsset(propInfoFather_Path)
                                assert(propInfoFather_asset)
                                local propInfoFather = propInfoFather_asset:Instantiate()
                                propInfoFather.transform:SetParent(this.roleGet.transform, false)

                                --名称设置：
                                propInfoFather.transform:Find("propInfo/bg/info/name"):GetComponent(typeof(UI.Text)).text = v_items.name
                                --对话设置：
                                propInfoFather.transform:Find("propInfo/bg/info/desc"):GetComponent(typeof(UI.Text)).text = v_items.describe
                                --数量设置：
                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/num"):GetComponent(typeof(UI.Text)).text = "x" .. v_BanishGetGoods_data.num
                                --头像设置：
                                propInfoFather.transform:Find("propInfo/bg/info/itemIcon/itemIconFather/itemIcon/item"):GetComponent(typeof(UI.Image)).sprite = ResourceManager.GetProp(v_items.icon)

                                this:buttonOn(
                                    propInfoFather.transform:Find("bg"),
                                    "",
                                    function()
                                        GameObject.Destroy(propInfoFather)
                                    end
                                )
                            end
                        )
                    end
                end
                itemIcon4.transform:SetParent(this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content"), false)
            end
            --监听再召唤十次
            this:buttonOn(
                this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen2"),
                "",
                function()
                    PumpingCardPage:GetTenC2S()
                    --告诉服务器十连抽
                    --跳过十连
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                    if this.getGoods ~= nil then
                        this.getGoods.gameObject:SetActive(false)
                    end

                    this.countAdd = 1
                    -- 第十个后重置计数器
                    GetTenCardId = {}
                    GetTenCardStatus = {}

                    --删除spine,并隐藏界面内的其他UI
                    CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                end
            )
            --监听确认奖励按钮，即跳过十连
            this:buttonOn(
                this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/btnScreen"),
                "",
                function()
                    --跳过十连
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                    if this.getGoods ~= nil then
                        this.getGoods.gameObject:SetActive(false)
                    end

                    this.countAdd = 1
                    -- 第十个后重置计数器
                    GetTenCardId = {}
                    GetTenCardStatus = {}

                    --删除spine,并隐藏界面内的其他UI
                    CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                end
            )
            --监听点击背景，即确认奖励和跳过十连
            this:buttonOn(
                this.roleGet.transform:Find("spine/getGoodsFather/bg"),
                "",
                function()
                    --跳过十连
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                    this.roleGet.transform:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                    this.summoning:Find("bg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("top"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("down"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                    this.summoning:Find("btnLook"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1

                    if this.getGoods ~= nil then
                        this.getGoods.gameObject:SetActive(false)
                    end

                    this.countAdd = 1
                    -- 第十个后重置计数器
                    GetTenCardId = {}
                    GetTenCardStatus = {}

                    --删除spine,并隐藏界面内的其他UI
                    CS.Utils.DestroyAllChildren(this.roleInfoSpineStage_prefab.transform)
                end
            )

            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
            this.roleGet.transform:Find("info2"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
            this.roleGet.transform:Find("info"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
            this.roleGet.transform:Find("pz"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
            this.roleGet.transform:Find("nameBg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
            this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
            this.summoning.transform:Find("roleGet/btnTg"):GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

            --获得物品界面根据数量自适应高度
            local Scroll_View = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View")
            local Scroll_View_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View/Content")
            local Scroll_View2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2")
            local Scroll_View2_Content = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/Scroll View2/Content")
            local m_title = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title")
            local m_title2 = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/yl/title2")
            local m_bg = this.roleGet.transform:Find("spine/getGoodsFather/getGoods/bg")

            if Scroll_View_Content.childCount ~= 0 and Scroll_View2_Content.childCount ~= 0 then
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 41.9)
                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 545.4)
                Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
            elseif Scroll_View_Content.childCount == 0 then
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true

                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 45)
                m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, 93.8)
            elseif Scroll_View2_Content.childCount == 0 then
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                Scroll_View:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                Scroll_View2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
                m_title:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = true
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
                m_title2:GetComponent(typeof(UnityEngine.CanvasGroup)).blocksRaycasts = false

                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -75)
                m_bg:GetComponent(typeof(UnityEngine.RectTransform)).sizeDelta = UnityEngine.Vector2(675, 320)
                Scroll_View:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -265.8)
                m_title:GetComponent(typeof(UnityEngine.RectTransform)).anchoredPosition = UnityEngine.Vector2(0, -217)
            end
        end
    )
end
--@endregion
-------------------------------倒计时-------------------------------
function PumpingCardPage:UpdateSlotTimeRemain(lab, remain)
    -- 停止某个目标
    --用于缓存倒计时方法dotween
    if this.tween == nil then
        local function OnTimeRemain()
            if remain == 0 then
                self:StopCoroutine(this.tween)
            --清除倒计时
            -- onComplete()
            end
            lab.text = convertSecondToStr(remain)
            remain = remain - 1
        end
        this.tween = self:Schedule(1, OnTimeRemain)
        --开发倒计时
        OnTimeRemain()
    else
        self:StopCoroutine(this.tween)
        --清除倒计时
        local function OnTimeRemain()
            if remain == 0 then
                self:StopCoroutine(this.tween)
            -- onComplete()
            end
            lab.text = convertSecondToStr(remain)
            remain = remain - 1
        end
        this.tween = self:Schedule(1, OnTimeRemain)
        --开发倒计时
        OnTimeRemain()
    end
end
-------------------------------初始化卡池选择按钮-------------------------------
function PumpingCardPage:InitToggle()
    local lineobj = this.summoning:Find("down/line")
    local Toggle1 = lineobj.transform:Find("Toggle1")
    local Toggle2 = lineobj.transform:Find("Toggle2")
    local Toggle3 = lineobj.transform:Find("Toggle3")

    Toggle1.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = true
    Toggle2.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
    Toggle3.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
end
--@region----------------------选择卡池-------------------------------
-- 选择当前卡池类型（单选）
function PumpingCardPage:SelectToggle1()
    this.selectNum = 1
    local lineobj = this.summoning:Find("down/line")
    local Toggle1 = lineobj.transform:Find("Toggle1")
    local Toggle2 = lineobj.transform:Find("Toggle2")
    local Toggle3 = lineobj.transform:Find("Toggle3")

    Toggle1.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = true
    Toggle2.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
    Toggle3.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false

    --dump("======================卡池描述设置到UI======================")
    local altar_cardpool = dbdata.GetTable("altar_cardpool")
    for _, cardpoolindex in pairs(altar_cardpool) do
        if cardpoolindex.id == this.eventStatic[1]["Id"] then
            this.summoning:Find("down/textBg/text"):GetComponent(typeof(UI.Text)).text = cardpoolindex.describe
        end
    end

    --点击卡池类型后设置价格
    local frepricee_time_remain = this.eventStatic[1]["price"]
    local discount = this.eventStatic[1]["discount"]
    --dump("<color=#FF3A00>@</color>")
    --dump("======================单价设置到UI======================")
    local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
    numtext.text = "x" .. frepricee_time_remain
    --dump("<color=#FF3A00>@</color>")
    --dump("======================连抽价格设置到UI======================")
    local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
    numtext2.text = "x" .. math.ceil(frepricee_time_remain * discount * 0.01 * 10)
    --float转
    ------------------------------------
    --dump("<color=#FF3A00>@</color>")
    --dump("======================剩余免费时间设置到UI======================")
    -- --时间戳转换
    -- 倒计时
    this:HeroGetPoolList()
    ------------------------------------
    --设置scrollview数据
    local tt = table.packArrayToRows(this.select_1_data, 4)
    --当前卡池scrollview数据缓存
    this.select_current_data = this.select_1_data
    this.scrollView:SetData(tt)
    --dump("======================重置筛选======================")
    self.labScreen:GetComponent(typeof(UI.Text)).text = "全部品质"
    self.labScreen2:GetComponent(typeof(UI.Text)).text = "全部职业"
end

-- 选择当前卡池类型（单选）
function PumpingCardPage:SelectToggle2()
    this.selectNum = 2
    local lineobj = this.summoning:Find("down/line")
    local Toggle1 = lineobj.transform:Find("Toggle1")
    local Toggle2 = lineobj.transform:Find("Toggle2")
    local Toggle3 = lineobj.transform:Find("Toggle3")

    Toggle1.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
    Toggle2.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = true
    Toggle3.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false

    --dump("======================卡池描述设置到UI======================")
    local altar_cardpool = dbdata.GetTable("altar_cardpool")
    for _, cardpoolindex in pairs(altar_cardpool) do
        if cardpoolindex.id == this.eventStatic[2]["Id"] then
            this.summoning:Find("down/textBg/text"):GetComponent(typeof(UI.Text)).text = cardpoolindex.describe
        end
    end
    --点击卡池类型后设置价格
    local frepricee_time_remain = this.eventStatic[2]["price"]
    local discount = this.eventStatic[2]["discount"]
    --dump("<color=#FF3A00>@</color>")
    --dump("======================单价设置到UI======================")
    local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
    numtext.text = "x" .. frepricee_time_remain
    --dump("<color=#FF3A00>@</color>")
    --dump("======================连抽价格设置到UI======================")
    local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
    numtext2.text = "x" .. math.ceil(frepricee_time_remain * discount * 0.01 * 10)
    ------------------------------------
    --dump("<color=#FF3A00>@</color>")
    --dump("======================剩余免费时间设置到UI======================")
    -- --时间戳转换
    -- 倒计时
    this:HeroGetPoolList()
    ------------------------------------
    --设置scrollview数据
    local tt = table.packArrayToRows(this.select_2_data, 4)
    this.select_current_data = this.select_2_data
    this.scrollView:SetData(tt)

    --dump("======================重置筛选======================")
    self.labScreen:GetComponent(typeof(UI.Text)).text = "全部品质"
    self.labScreen2:GetComponent(typeof(UI.Text)).text = "全部职业"
end

-- 选择当前卡池类型（单选）
function PumpingCardPage:SelectToggle3()
    this.selectNum = 3
    local lineobj = this.summoning:Find("down/line")
    local Toggle1 = lineobj.transform:Find("Toggle1")
    local Toggle2 = lineobj.transform:Find("Toggle2")
    local Toggle3 = lineobj.transform:Find("Toggle3")

    Toggle1.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
    Toggle2.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = false
    Toggle3.transform:Find("Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled = true
    --dump("======================卡池描述设置到UI======================")
    local altar_cardpool = dbdata.GetTable("altar_cardpool")
    for _, cardpoolindex in pairs(altar_cardpool) do
        if cardpoolindex.id == this.eventStatic[3]["Id"] then
            this.summoning:Find("down/textBg/text"):GetComponent(typeof(UI.Text)).text = cardpoolindex.describe
        end
    end
    --点击卡池类型后设置价格
    local frepricee_time_remain = this.eventStatic[3]["price"]
    local discount = this.eventStatic[3]["discount"]
    --dump("<color=#FF3A00>@</color>")
    --dump("======================单价设置到UI======================")
    local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
    numtext.text = "x" .. frepricee_time_remain
    --dump("<color=#FF3A00>@</color>")
    --dump("======================连抽价格设置到UI======================")
    local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
    numtext2.text = "x" .. math.ceil(frepricee_time_remain * discount * 0.01 * 10)
    ------------------------------------
    --dump("<color=#FF3A00>@</color>")
    --dump("======================剩余免费时间设置到UI======================")
    -- 倒计时
    this:HeroGetPoolList()
    ------------------------------------
    --设置scrollview数据
    local tt = table.packArrayToRows(this.select_3_data, 4)
    this.select_current_data = this.select_3_data
    this.scrollView:SetData(tt)

    --dump("======================重置筛选======================")
    self.labScreen:GetComponent(typeof(UI.Text)).text = "全部品质"
    self.labScreen2:GetComponent(typeof(UI.Text)).text = "全部职业"
end
--@endregion
-------------------------------显示卡池界面（在S2C的时候已经创建了）-------------------------------
function PumpingCardPage:CreatePoolList()
    if this.probability ~= nil then
        local canvasGroup = self:GetComponent(self.mainTf, "probability", UnityEngine.CanvasGroup)
        canvasGroup.alpha = 1
        canvasGroup.blocksRaycasts = true
        canvasGroup.interactable = true
    end

    local line_3 = this.summoning:Find("down/line")
    this.probability = this.summoning:Find("probability")
    if line_3:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --获取json数据
        local altar_cardpool = dbdata.GetTable("altar_cardpool")
        for _, cardpoolindex in pairs(altar_cardpool) do
            --获取服务端发的卡池数据
            --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
            if cardpoolindex.id == this.eventStatic[1]["Id"] then
                local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                --查找界面内的对象赋值这四个数据
                this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
            end
        end
    elseif line_3:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --获取json数据
        local altar_cardpool = dbdata.GetTable("altar_cardpool")
        for _, cardpoolindex in pairs(altar_cardpool) do
            --获取服务端发的卡池数据
            --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
            if cardpoolindex.id == this.eventStatic[2]["Id"] then
                local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                --查找界面内的对象赋值这四个数据
                this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
            end
        end
    else
        --获取json数据
        local altar_cardpool = dbdata.GetTable("altar_cardpool")
        for _, cardpoolindex in pairs(altar_cardpool) do
            --获取服务端发的卡池数据
            --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
            if cardpoolindex.id == this.eventStatic[3]["Id"] then
                local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                --查找界面内的对象赋值这四个数据
                this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
            end
        end
    end
end
-------------------------------初始化卡池scrollview数据-------------------------------
function PumpingCardPage:InitScrollview()
    local SC =
        this:StartCoroutine(
        function()
            --设置卡池界面参数
            if true then
                local name = this.eventStatic[1]["name"]
                --卡池名称
                local discount = this.eventStatic[1]["discount"]
                --折扣
                local free_time_remain = this.eventStatic[1]["free_time_remain"]
                --剩余免费时间
                local frepricee_time_remain = this.eventStatic[1]["price"]
                --单价
                local free_times_total = this.eventStatic[1]["free_times_total"]
                --免费总次数
                local free_times_avail = this.eventStatic[1]["free_times_avail"]
                --免费次数

                --设置背景可以被射线检测，就不会触发空白点击事件

                --dump("<color=#FF3A00>@</color>")
                --dump("======================卡池scrollview======================")
                do -- 初始化scrollview
                    -- 英雄总览
                    local heroList = this:Find(this.gameObject.transform, "heroList")
                    local path = "Assets/Art/UI/Prefab/role/roleList.prefab"
                    local asset = CS.TJ.BundleManager.Instance:LoadAsset(path)
                    assert(asset)
                    local heroListUI = asset:Instantiate()
                    heroListUI.transform:SetParent(heroList, false)
                    this:buttonOn(heroListUI.transform, "btnAll", PumpingCardPage.OnClickHeroList)

                    local heroListLuaInst = checkComponent(heroListUI:GetComponent(typeof(CS.TJ.LBehaviour))).luaInst
                    this.heroList = heroListLuaInst
                    -----------------------------------------------------------------------------------
                    this.content = this.summoning.transform:Find("probability/yl/heroList/roleList/content")
                    if this.scrollView == nil then
                        local scrollView = this.content:Find("Scroll View")
                        this.scrollView = checkLBehaviour(scrollView, CardPoolScrollView).luaInst
                    end

                    do --数据格式，假数据
                        -- local crews = {
                        --     {
                        --         nickname = "狼灵·加兰",
                        --         quality = 3,
                        --         allAttr = 15,
                        --         cid = 40405,
                        --         lv = 1,
                        --         notOwned = true,
                        --         star_lv = 0,
                        --         icon = "101_3"
                        --     }
                    end

                    --dump("------------------------卡池scrollview数据抓取------------------------")
                    for selecti = 1, 3 do
                        local crews = {}
                        local altar_drops = dbdata.GetTable("altar_drops")
                        local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                        local heroView = string.split(altar_cardpoolpreview[this.eventStatic[selecti]["Id"]]["heroView"], ";")
                        local dropGroup = ""
                        for i_heroView, v_heroView in ipairs(heroView) do
                            for _, altar_dropsindex in pairs(altar_drops) do
                                if tostring(altar_dropsindex.id) == v_heroView then
                                    if dropGroup ~= "" then
                                        dropGroup = dropGroup .. ";" .. altar_dropsindex.dropGroup
                                    else
                                        dropGroup = altar_dropsindex.dropGroup
                                    end
                                end
                            end
                        end

                        for i = 1, table.nums(string.split(dropGroup, ";")) do
                            local altar_dropsindexid = string.split(string.split(dropGroup, ";")[i], ",")[1]
                            --cid:10101

                            for i_hero, v_hero in ipairs(dbdata.GetTable("hero")) do
                                --dump("<color=#FF3A00>@</color>")
                                if tostring(v_hero.id) == altar_dropsindexid then
                                    for i_icon, v_icon in ipairs(dbdata.GetTable("artResources")) do
                                        if v_hero.dressId == v_icon.id then
                                            crews[i] = {
                                                cid = v_hero.id,
                                                nickname = v_hero.nickname,
                                                quality = v_hero.quality,
                                                allAttr = 15,
                                                lv = 1,
                                                notOwned = true,
                                                star_lv = 1,
                                                icon = v_icon.portrait
                                            }
                                        end
                                    end
                                end
                            end
                        end

                        --@region 计数排序，按卡牌品质从大到小进行收集并重新存到crews中
                        local q_All_Table = {}
                        for k_sort, v_sort in pairs(crews) do
                            if v_sort.quality == 5 then
                                table.insert(q_All_Table, v_sort)
                            end
                        end
                        for k_sort, v_sort in pairs(crews) do
                            if v_sort.quality == 4 then
                                table.insert(q_All_Table, v_sort)
                            end
                        end
                        for k_sort, v_sort in pairs(crews) do
                            if v_sort.quality == 3 then
                                table.insert(q_All_Table, v_sort)
                            end
                        end
                        for k_sort, v_sort in pairs(crews) do
                            if v_sort.quality == 2 then
                                table.insert(q_All_Table, v_sort)
                            end
                        end
                        for k_sort, v_sort in pairs(crews) do
                            if v_sort.quality == 1 then
                                table.insert(q_All_Table, v_sort)
                            end
                        end
                        crews = q_All_Table
                        --@endregion

                        if selecti == 1 then
                            --用于存储第一个卡池scrollview数据缓存
                            this.select_1_data = crews
                        elseif selecti == 2 then
                            --用于存储第二个卡池scrollview数据缓存
                            this.select_2_data = crews
                        elseif selecti == 3 then
                            this.select_3_data = crews
                        --用于存储第三个卡池scrollview数据缓存
                        end
                    end

                    --dump("------------------------卡池scrollview数据抓取End------------------------")
                    local tt = table.packArrayToRows(this.select_1_data, 4)
                    this.select_current_data = this.select_1_data
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            end

            --dump("<color=#FF3A00>@</color>")
            --dump("======================卡池返回数据======================")
        end
    )
end
-------------------------------点击scrollview的cell监听-------------------------------
function PumpingCardPage:OnClickHeroList()
    -- if self.heroListIsOpened ~= true then
    --     self:ExpandHeroList()
    -- else
    --     self:ShrinkHeroList()
    -- end
end
--@region----------------------卡池预览筛选监听-------------------------------
function PumpingCardPage.SelectJob(value)
    if value == 0 then
        --SelectAllJob
        --dump("<color=#FF3A00>@</color>")
        --dump("0")
    elseif value == 1 then
        --SelectWhite
        --dump("<color=#FF3A00>@</color>")
        --dump("1")
    elseif value == 2 then
        --SelectBlue
        --dump("<color=#FF3A00>@</color>")
        --dump("2")
    elseif value == 3 then
        --SelectPurple
        --dump("<color=#FF3A00>@</color>")
        --dump("3")
    elseif value == 4 then
        --SelectGold
        --dump("<color=#FF3A00>@</color>")
        --dump("4")
    elseif value == 5 then
    --SelectRed
    --dump("<color=#FF3A00>@</color>")
    --dump("5")
    end
    --dump("<color=#FF3A00>@</color>")
end

function PumpingCardPage.SelectQuality(value)
    if value == 0 then
        --SelectAllQuality
    elseif value == 1 then
        --SelectWarrior
    elseif value == 2 then
        --SelectMage
    elseif value == 3 then
        --SelectAssassin
    elseif value == 4 then
        --SelectAuxiliary
    elseif value == 5 then
        --SelectShooter
    elseif value == 6 then
    --SelectTank
    end
end
--@endregion
--@region----------------------TODO 筛选下拉框列表-------------------------------
-- 选择的品质和职业的交集
function PumpingCardPage:Quality_Role_inter()
    this.arrU, this.arrR, this.arrA = arrayInterDifferCompl(this.q_sort_table, this.r_sort_table, nil)
end
-------------------------------品质排序-------------------------------
function PumpingCardPage:OnToggleQualitySortList()
    if self.sortListActive == true then
        self:OnHideQualitySortList()
    else
        self:OnShowQualitySortList()
        --如果点击品质筛选，那就隐藏职业筛选
        self.roleTypeList.gameObject:SetActive(false)
        self.sortListActive2 = false
    end
end
function PumpingCardPage:OnShowQualitySortList()
    self.sortList.gameObject:SetActive(true)
    self.sortListActive = true

    for _, item in ipairs(self.sortItemList) do
        item.gameObject:SetActive(false)
    end
    --实例化下拉列表
    for _ = #self.sortItemList + 1, #QualitySortTypeArray do
        local item = Object.Instantiate(self.sortItem, self.sortList)
        self.sortItemList[#self.sortItemList + 1] = item
    end
    --显示下拉列表元素，并给其重命名和设置点击事件
    for i, sortType in ipairs(QualitySortTypeArray) do
        local item = self.sortItemList[i]
        item.gameObject:SetActive(true)

        local lab = self:GetComponent(item, "", UI.Text)
        lab.text = sortNameArray[sortType]

        if item:GetComponent(typeof(UI.Text)).text == "全部品质" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "全部品质"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    --选择的品质和职业的交集
                    this.q_sort_table = this.select_current_data
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(this.select_current_data, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "D" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "D"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    for k_data, v_data in pairs(this.select_current_data) do
                        if v_data["quality"] == 1 then
                            table.insert(select_current_data_copy, v_data)
                        end
                    end
                    --选择的品质和职业的交集
                    this.q_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "C" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "C"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    for k_data, v_data in pairs(this.select_current_data) do
                        if v_data["quality"] == 2 then
                            table.insert(select_current_data_copy, v_data)
                        end
                    end
                    --选择的品质和职业的交集
                    this.q_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "B" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "B"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    for k_data, v_data in pairs(this.select_current_data) do
                        if v_data["quality"] == 3 then
                            table.insert(select_current_data_copy, v_data)
                        end
                    end

                    --选择的品质和职业的交集
                    this.q_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "A" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "A"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    for k_data, v_data in pairs(this.select_current_data) do
                        if v_data["quality"] == 4 then
                            table.insert(select_current_data_copy, v_data)
                        end
                    end

                    --选择的品质和职业的交集
                    this.q_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "S" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideQualitySortList()
                    self.labScreen:GetComponent(typeof(UI.Text)).text = "S"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    for k_data, v_data in pairs(this.select_current_data) do
                        if v_data["quality"] == 5 then
                            table.insert(select_current_data_copy, v_data)
                        end
                    end

                    --选择的品质和职业的交集
                    this.q_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        end
    end
end
function PumpingCardPage:OnHideQualitySortList()
    self.sortList.gameObject:SetActive(false)
    self.sortListActive = false
end
-------------------------------根据职业排序-------------------------------
function PumpingCardPage:OnToggleRoleSortList()
    if self.sortListActive2 == true then
        self:OnHideRoleSortList()
    else
        self:OnShowRoleSortList()
        --如果点击职业筛选，那就隐藏品质筛选
        self.sortList.gameObject:SetActive(false)
        self.sortListActive = false
    end
end
function PumpingCardPage:OnShowRoleSortList()
    self.roleTypeList.gameObject:SetActive(true)
    self.sortListActive2 = true

    for _, item in ipairs(self.roleTypeItemList) do
        item.gameObject:SetActive(false)
    end
    --实例化下拉列表
    for _ = #self.roleTypeItemList + 1, #RoleSortTypeArray do
        local item = Object.Instantiate(self.roleTypeItem, self.roleTypeList)
        self.roleTypeItemList[#self.roleTypeItemList + 1] = item
    end
    --显示下拉列表元素，并给其重命名和设置点击事件
    for i, sortType in ipairs(RoleSortTypeArray) do
        local item = self.roleTypeItemList[i]
        item.gameObject:SetActive(true)

        local lab = self:GetComponent(item, "", UI.Text)
        lab.text = sortNameArray2[sortType]

        if item:GetComponent(typeof(UI.Text)).text == "全部职业" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "全部职业"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    --选择的品质和职业的交集
                    this.r_sort_table = this.select_current_data
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(this.select_current_data, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    local tt = table.packArrayToRows(this.select_current_data, 4)
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "战士" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "战士"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 1 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end

                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "法师" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "法师"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 2 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end
                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "刺客" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "刺客"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 3 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end
                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "辅助" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "辅助"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 4 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end
                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "射手" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "射手"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 5 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end
                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        elseif item:GetComponent(typeof(UI.Text)).text == "坦克" then
            self:buttonOn(
                item,
                "",
                function()
                    self:OnHideRoleSortList()
                    self.labScreen2:GetComponent(typeof(UI.Text)).text = "坦克"
                    --//TODO 这里需要对scrollview内的cell进行重新赋值
                    local select_current_data_copy = {}
                    local hero = dbdata.GetTable("hero")
                    --遍历表格json：
                    for _, heroindex in pairs(hero) do
                        --遍历当前卡池数据缓存
                        for k_data, v_data in pairs(this.select_current_data) do
                            if heroindex.id == v_data["cid"] then
                                if heroindex["role"] == 6 then
                                    table.insert(select_current_data_copy, v_data)
                                end
                            end
                        end
                    end
                    --选择的品质和职业的交集
                    this.r_sort_table = select_current_data_copy
                    PumpingCardPage:Quality_Role_inter()
                    local tt = table.packArrayToRows(select_current_data_copy, 4)
                    if table.nums(this.arrU) ~= 0 then
                        tt = table.packArrayToRows(this.arrU, 4)
                    end
                    --给scrollview赋值data数据
                    this.scrollView:SetData(tt)
                end
            )
        end
    end
end
function PumpingCardPage:OnHideRoleSortList()
    self.roleTypeList.gameObject:SetActive(false)
    self.sortListActive2 = false
end
--@endregion
--@endregion
--@region ===================================S2C==================================
-------------------------------S2C注册回调-------------------------------
function PumpingCardPage.RegMsg()
    Net.RegMsg(Msgac.HeroGetPoolList, PumpingCardPage.HeroGetPoolListCB)
    Net.RegMsg(Msgac.HeroDrawCard, PumpingCardPage.HeroDrawCardCB)
    Net.RegMsg(Msgac.HeroSynthesis, PumpingCardPage.HeroSynthesisCB)
    Net.RegMsg(Msgac.HeroLevelUp, PumpingCardPage.HeroLevelUpCB)
    Net.RegMsg(Msgac.HeroStarUp, PumpingCardPage.HeroStarUpCB)
    Net.RegMsg(Msgac.Storage_notify_itemchange, PumpingCardPage.BanishGetGoods)
end
-------------------------------S2C监听服务端返回卡池-------------------------------
function PumpingCardPage:HeroGetPoolListCB(event, data)
    if this.eventStatic == nil then
        --dump("<color=#FF3A00>@</color>")
        --dump("======================卡池返回数据======================")
        --dump(event)
        -- 编队数据
        local eventLocal = event
        if not eventLocal then
            eventLocal = {}
        end
        convertKeyToNumber(eventLocal)
        --保存S2C卡池数据
        this.eventStatic = eventLocal

        local name = this.eventStatic[1]["name"]
        --卡池名称
        local discount = this.eventStatic[1]["discount"]
        --折扣
        local free_time_remain = this.eventStatic[1]["free_time_remain"]
        --剩余免费时间
        local frepricee_time_remain = this.eventStatic[1]["price"]
        --单价
        local free_times_total = this.eventStatic[1]["free_times_total"]
        --免费总次数
        local free_times_avail = this.eventStatic[1]["free_times_avail"]
        --免费次数

        --dump("<color=#FF3A00>@</color>")
        --dump("======================剩余免费时间设置到UI======================")
        local timetext = this.summoning:Find("down/btn1/time"):GetComponent(typeof(UI.Text))
        if free_times_total == 0 then
            this.summoning:Find("down/btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
        else
            this.summoning:Find("down/btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
            timetext.text = convertSecondToStr(free_time_remain) .. "后免费"
            --时间戳转换
            --倒计时
            this:UpdateSlotTimeRemain(timetext, free_time_remain)
        end

        ------------------------------------
        --dump("<color=#FF3A00>@</color>")
        --dump("======================单价设置到UI======================")
        local numtext = this.summoning:Find("down/btn1/tips/num"):GetComponent(typeof(UI.Text))
        numtext.text = "x" .. frepricee_time_remain
        --dump("<color=#FF3A00>@</color>")
        --dump("======================连抽价格设置到UI======================")
        local numtext2 = this.summoning:Find("down/btn2/tips/num"):GetComponent(typeof(UI.Text))
        numtext2.text = "x" .. math.ceil(frepricee_time_remain * discount * 0.01 * 10)
        --float转
        --dump("<color=#FF3A00>@</color>")
        --dump("======================初始化卡池界面======================")
        if this.probability ~= nil then
            local canvasGroup = this.summoning:Find("probability").gameObject:GetComponent(typeof(UnityEngine.CanvasGroup))
            canvasGroup.alpha = 0
            canvasGroup.blocksRaycasts = false
            canvasGroup.interactable = false
            --获取json数据
            local altar_cardpool = dbdata.GetTable("altar_cardpool")
            for _, cardpoolindex in pairs(altar_cardpool) do
                --获取服务端发的卡池数据
                --根据服务端发的卡池数据的卡池Id（确认行）去找卡池json表的preview（确认列），并确认卡池预览表的ID行数
                if cardpoolindex.id == this.eventStatic[1]["Id"] then
                    local altar_cardpoolpreview = dbdata.GetTable("altar_cardpoolpreview")
                    --获得probabilityView1	probabilityView2	probabilityView3	probabilityView4
                    --查找界面内的对象赋值这四个数据
                    this.probability.transform:Find("gl/bai/bai1"):GetComponent(typeof(UI.Text)).text = "D"
                    this.probability.transform:Find("gl/bai/bai2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView1) .. "%"
                    this.probability.transform:Find("gl/lan/lan1"):GetComponent(typeof(UI.Text)).text = "C"
                    this.probability.transform:Find("gl/lan/lan2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView2) .. "%"
                    this.probability.transform:Find("gl/zi/zi1"):GetComponent(typeof(UI.Text)).text = "B"
                    this.probability.transform:Find("gl/zi/zi2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView3) .. "%"
                    this.probability.transform:Find("gl/jin/jin1"):GetComponent(typeof(UI.Text)).text = "A"
                    this.probability.transform:Find("gl/jin/jin2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView4) .. "%"
                    this.probability.transform:Find("gl/hong/hong1"):GetComponent(typeof(UI.Text)).text = "S"
                    this.probability.transform:Find("gl/hong/hong2"):GetComponent(typeof(UI.Text)).text = (altar_cardpoolpreview[cardpoolindex.preview].probabilityView5) .. "%"
                end
            end
        end

        this:InitScrollview()
    else
        ------------------------------------
        -- 编队数据
        local eventLocal = event
        if not eventLocal then
            eventLocal = {}
        end
        convertKeyToNumber(eventLocal)
        this.eventStatic = eventLocal

        local free_time_remain = this.eventStatic[this.selectNum]["free_time_remain"]
        --剩余免费时间
        --dump("======================剩余免费时间设置到UI======================")
        local timetext = this.summoning:Find("down/btn1/time"):GetComponent(typeof(UI.Text))
        if this.eventStatic[this.selectNum]["free_times_total"] == 0 then
            this.summoning:Find("down/btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
        else
            this.summoning:Find("down/btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
            timetext.text = convertSecondToStr(free_time_remain) .. "后免费"
            --时间戳转换
            --倒计时
            this:UpdateSlotTimeRemain(timetext, free_time_remain)
        end
    end

    --dump("======================卡池描述设置到UI======================")
    local altar_cardpool = dbdata.GetTable("altar_cardpool")
    for _, cardpoolindex in pairs(altar_cardpool) do
        if cardpoolindex.id == this.eventStatic[this.selectNum]["Id"] then
            this.summoning:Find("down/textBg/text"):GetComponent(typeof(UI.Text)).text = cardpoolindex.describe
        end
    end

    --  如果当前灵魂宝珠数量小于卡池单价，价格就显示为红色表示数量不足  单价
    if Storage:GetSoulOrb() < this.eventStatic[this.selectNum]["price"] then
        this.down:Find("btn1/tips/num"):GetComponent(typeof(UI.Text)).color = HexColor("7B4042")
    else
        this.down:Find("btn1/tips/num"):GetComponent(typeof(UI.Text)).color = HexColor("C8BCAF")
    end
    --  如果当前灵魂宝珠数量小于卡池单价，价格就显示为红色表示数量不足  十连价
    if Storage:GetSoulOrb() < math.ceil(this.eventStatic[this.selectNum]["price"] * this.eventStatic[this.selectNum]["discount"] * 0.01 * 10) then
        this.down:Find("btn2/tips/num"):GetComponent(typeof(UI.Text)).color = HexColor("7B4042")
    else
        this.down:Find("btn2/tips/num"):GetComponent(typeof(UI.Text)).color = HexColor("C8BCAF")
    end
    --  如果有免费次数就显示出来，没有就显示价格
    if this.eventStatic[this.selectNum]["free_times_avail"] > 0 then
        this.down:Find("btn1/freeTime"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
        this.down:Find("btn1/freeTime"):GetComponent(typeof(UI.Text)).text =
            "免费次数  " .. this.eventStatic[this.selectNum]["free_times_avail"] .. "/" .. this.eventStatic[this.selectNum]["free_times_total"]
        this.down:Find("btn1/tips"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
    else
        this.down:Find("btn1/freeTime"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
        this.down:Find("btn1/tips"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
    end
    --达到免费次数上限时后隐藏倒计时
    if this.eventStatic[this.selectNum]["free_times_total"] == 0 then
        this.down:Find("btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 0
    else
        this.down:Find("btn1/time"):GetComponent(typeof(UnityEngine.CanvasGroup)).alpha = 1
    end
    -- 设置卡池剩余显示时间（时间戳转换）
    os.date("剩余时间%d天%H小时", this.eventStatic[3]["show_time_remain"])
    this.down:Find("line/Toggle3/timetext"):GetComponent(typeof(UI.Text)).text = os.date("剩余时间:%d天%H小时", this.eventStatic[3]["show_time_remain"])
    dump("<color=#FF3A00>@</color>")
end
-------------------------------S2C监听服务端返回抽卡-------------------------------
function PumpingCardPage:HeroDrawCardCB(event, data)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================抽卡返回数据======================")
    if event["ret"] == 0 then
        --lgEvent:send("show_one_tip", "抽卡成功！")
        --dump("<color=#FF3A00>@</color>")
        --dump(event)
        PumpingCardPage:GetGoldDiamondSoulOrb()
        --抽卡完设置一下金币钻石和灵魂宝珠的值

        if table.nums(event["new"]) > 1 or table.nums(event["banish"]) > 1 or table.nums(event["upgrade"]) > 1 then
            --十连
            PumpingCardPage:CreateGetTenCartPage(event)
        else
            --单抽
            --显示抽卡视觉效果
            PumpingCardPage:CreateGetCartPage(event)
        end

        -- 英雄升阶更新本地数据库给队伍调用
        local upgrade = event["upgrade"]
        for i_upgrade, v_upgrade in pairs(upgrade) do
            Crew.UpdateCrew(v_upgrade[1]["upgraded_hero"], 3)
        end
    elseif event.ret == -3 then
        --弹出横幅
        --dump("<color=#FF3A00>@</color>")
        --dump("没钱了，请充钱再抽卡！")
        --lgEvent:send("show_one_tip", "没钱了，请充钱再抽卡！")--弹出左下方提示框

        lgEvent:send(Constants.ShowUI.ScreenTip, i18n.format("Label.PumpingCardPage.NoMoney"))
    else
        --lgEvent:send("show_one_tip", "抽卡成功！")
        --dump("<color=#FF3A00>@</color>")
        --dump(event)
        PumpingCardPage:GetGoldDiamondSoulOrb()
        --抽卡完设置一下金币钻石和灵魂宝珠的值

        if table.nums(event["new"]) > 1 or table.nums(event["banish"]) > 1 or table.nums(event["upgrade"]) > 1 then
            --十连
            PumpingCardPage:CreateGetTenCartPage(event)
        else
            --单抽
            --显示抽卡视觉效果
            PumpingCardPage:CreateGetCartPage(event)
        end

        -- 英雄升阶更新本地数据库给队伍调用
        local upgrade = event["upgrade"]
        for i_upgrade, v_upgrade in pairs(upgrade) do
            Crew.UpdateCrew(v_upgrade[1]["upgraded_hero"], 3)
        end
    end

    --dump("<color=#FF3A00>@</color>")
    --dump("======================抽卡返回数据======================")
end
-------------------------------S2C监听服务端返回英雄合成-------------------------------
function PumpingCardPage:HeroSynthesisCB(event, data)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================英雄合成返回数据======================")
    --dump("<color=#FF3A00>@</color>")
    --dump(event)
    PumpingCardPage:CreateRegenerate()
    --dump("<color=#FF3A00>@</color>")
    --dump("======================英雄合成返回数据======================")
end
-------------------------------S2C监听服务端返回英雄升级-------------------------------
function PumpingCardPage:HeroLevelUpCB(event, data)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================英雄升级返回数据======================")
    --dump("<color=#FF3A00>@</color>")
    --dump(event)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================英雄升级返回数据======================")
end
-------------------------------S2C监听服务端返回升星-------------------------------
function PumpingCardPage:HeroStarUpCB(event, data)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================升星返回数据======================")
    --dump("<color=#FF3A00>@</color>")
    --dump(event)
    --dump("<color=#FF3A00>@</color>")
    --dump("======================升星返回数据======================")
end
-------------------------------S2C请求更新 金币和灵魂宝珠-------------------------------
function PumpingCardPage:GetGoldDiamondSoulOrb()
    --dump("<color=#FF3A00>@</color>")
    --dump("===============金币钻石灵魂宝珠======================")
    this.summoning.transform:Find("top/resBg/btnRes1/Text"):GetComponent(typeof(UI.Text)).text = Storage:GetGold()
    this.summoning.transform:Find("top/resBg/btnRes2/Text"):GetComponent(typeof(UI.Text)).text = Storage:GetDiamond()
    this.summoning.transform:Find("top/resBg/btnRes3/Text"):GetComponent(typeof(UI.Text)).text = Storage:GetSoulOrb()
end
--@test
function PumpingCardPage:S2C(_, data)
    -- dump("OnMsgEventVarChange :" .. json.encode(data))
    -- -- local Event = require("Common.Event")
    -- -- lgEvent = Event()
    -- -- lgEvent:send("event_var_change", data)
    -- lgEvent:send(Constants.ShowUI.PumpingCardPage)
end

function PumpingCardPage:BanishGetGoods(_, data)
    --用于存放获奖数据缓存
    this.BanishGetGoods_data = {}
    for k, v in pairs(_["items"]) do
        if v["num"] > 0 and v["id"] < 600 then
            table.insert(this.BanishGetGoods_data, v)
        end
    end
end
--@endregion
--@region ===================================C2S==================================
-------------------------------C2S卡池-------------------------------
function PumpingCardPage:HeroGetPoolList()
    Net.SendMsg(Msgac.HeroGetPoolList, {})
    --请求卡池信息，由S2C返回。
end
--@region----------------------C2S抽卡-------------------------------
function PumpingCardPage:HeroDrawCard(timesloc, continuousloc, pool_groupidloc)
    if continuousloc == true then
        --连抽
        Net.SendMsg(Msgac.HeroDrawCard, {times = (timesloc), continuous = true, pool_groupid = (pool_groupidloc)})
    else
        --单抽
        Net.SendMsg(Msgac.HeroDrawCard, {times = (timesloc), continuous = false, pool_groupid = (pool_groupidloc)})
    end
end
-------------------------------单抽-------------------------------
--告诉服务器单抽
function PumpingCardPage:GetOneC2S()
    local line_1 = this.gameObject.transform:Find("summoning/down/line")
    if line_1:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --单价
        --获取卡池信息
        this:HeroDrawCardOne(this.eventStatic[1]["groupId"])
        --重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[1]["Id"]
        --ID
        this.discount = this.eventStatic[1]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[1]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[1]["price"]
    elseif line_1:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --单价
        --获取卡池信息
        this:HeroDrawCardOne(this.eventStatic[2]["groupId"])
        -- 重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[2]["Id"]
        --ID
        this.discount = this.eventStatic[2]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[2]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[2]["price"]
    elseif line_1:Find("Toggle3/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --获取卡池信息
        this:HeroDrawCardOne(this.eventStatic[3]["groupId"])
        --重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[3]["Id"]
        --ID
        this.discount = this.eventStatic[3]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[3]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[3]["price"]
    --单价
    end
end

function PumpingCardPage:HeroDrawCardOne(Pool)
    PumpingCardPage:HeroDrawCard(1, false, Pool)
end
-------------------------------十连-------------------------------
--告诉服务器十连抽
function PumpingCardPage:GetTenC2S()
    if this.line_2:Find("Toggle1/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --单价
        --获取卡池信息
        PumpingCardPage:HeroDrawCardTen(this.eventStatic[1]["groupId"])
        --重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[1]["Id"]
        --ID
        this.discount = this.eventStatic[1]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[1]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[1]["price"]
    elseif this.line_2:Find("Toggle2/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --单价
        --获取卡池信息
        PumpingCardPage:HeroDrawCardTen(this.eventStatic[2]["groupId"])
        --重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[2]["Id"]
        --ID
        this.discount = this.eventStatic[2]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[2]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[2]["price"]
    elseif this.line_2:Find("Toggle3/Background/Checkmark"):GetComponent(typeof(UI.Image)).enabled == true then
        --获取卡池信息
        PumpingCardPage:HeroDrawCardTen(this.eventStatic[3]["groupId"])
        --重置倒计时 -- 重新获取卡池信息

        this.eventStaticId = this.eventStatic[3]["Id"]
        --ID
        this.discount = this.eventStatic[3]["discount"]
        --折扣
        this.free_time_remain = this.eventStatic[3]["free_time_remain"]
        --剩余免费时间
        this.frepricee_time_remain = this.eventStatic[3]["price"]
    --单价
    end
end

function PumpingCardPage:HeroDrawCardTen(Pool)
    PumpingCardPage:HeroDrawCard(10, true, Pool)
end
--@endregion
-------------------------------C2S英雄合成-------------------------------
function PumpingCardPage:HeroSynthesis()
    Net.SendMsg(Msgac.HeroSynthesis, {type = 1, cid = 1})
    --请求英雄合成，由S2C返回。
end
-------------------------------C2S英雄升级-------------------------------
function PumpingCardPage:HeroLevelUp()
    Net.SendMsg(Msgac.HeroLevelUp, {hid = 1, continuous = false})
end
-------------------------------C2S英雄升星-------------------------------
function PumpingCardPage:HeroStarUp()
    Net.SendMsg(Msgac.HeroStarUp, {hid = 1, continuous = false})
end
--@endregion
--@region ===================================没引用方法==================================
--@region 点击
function PumpingCardPage:onClickBG()
    -- if self.text_pos < #self.texts then
    --     self.text_pos = self.text_pos + 1
    --     self:RefreshBtnStatus()
    --     return
    -- end
    -- if #self.dialog.jumps == 1 and self.dialog.jumps[1].Btn == "auto" then
    --     self:OnBtn(1)
    -- end
    -- self:OnBtn(1)
    --dump("<color=#FF3A00>@</color>")
    --dump("==========EventSystem==========")
    --dump("<color=#FF3A00>@</color>")
    --dump(CS.UnityEngine.EventSystems.EventSystem.current.currentSelectedGameObject)
    --dump("<color=#FF3A00>@</color>")
    --dump("==========EventSystem==========")
end
--@endregion

--@region 点击
function PumpingCardPage:OnBtn(idx)
    -- local jump = self.dialog.jumps[idx].Jump
    self:HeroDrawCard()
    --隐藏PumpingCardPage页面了
end
--@endregion

--@region 分割字符串
function PumpingCardPage:SpliteText(text)
    self.texts = string.split(text, "x")
    return self.texts[2]
end
--@endregion

--@region 刷新按钮状态
function PumpingCardPage:RefreshBtnStatus()
    -- local jumps = #self.dialog.jumps
    -- self.labInfo.text = self.texts[self.text_pos]
    -- for i = 1, 3, 1 do
    --     if i <= jumps then
    --         if self.dialog.jumps[i].Btn ~= "auto" and self.text_pos == #self.texts then
    --             self.btn[i]:SetActive(true)
    --             local labText = self:GetComponent(self.btn[i].transform, "text", UI.Text)----获得名为text文字组件
    --             labText.text = self.dialog.jumps[i].Btn
    --             self:Find(self.btn[i].transform, "res").gameObject:SetActive(false)
    --         else
    --             self.btn[i]:SetActive(false)
    --         end
    --     else
    --         self.btn[i]:SetActive(false)
    --     end
    -- end
end
--@endregion

--@region 隐藏抽卡主界面 -- 点击外面隐藏
--     function PumpingCardPage:Hide()
--         self:Hide()
--     end
--@endregion

--@endregion
PumpingCardPage:RegMsg()
return PumpingCardPage
